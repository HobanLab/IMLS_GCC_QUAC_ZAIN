sp_genind_list
#loop to write garden and wild comparison PCA
for(sp in 1:length(scenario_list)){
#load genepop files as genind objects
sp_genind_temp <- read.genepop(paste0("Adegenet_Files/",sp_genind_list[[sp]]), ncode = 3)
#separate garden individuals into one population
sp_garden_genind <- repool(seppop(sp_genind_temp)[pop_list[[sp]]])
#rename populations
levels(sp_garden_genind@pop) <- rep("Garden", length(pop_list[[sp]]))
#separate wild individuals and garden individuals
sp_wild_genind <- repool(seppop(sp_genind_temp)[pop_list[[sp+4]]])
#rename to wild only
levels(sp_wild_genind@pop) <- rep("Wild", length(pop_list[[sp+4]]))
#combine into one genind object
sp_genind_rp <- repool(sp_garden_genind, sp_wild_genind)
#read in data frame
#sp_df <- read.csv(paste0("Data_Frames/", sp_df_list[[2]]))
#name rows in the genind object
#rownames(sp_genind@tab) <- sp_df[,1]
#name pops
#levels(sp_genind@pop) <- c("Garden", "Wild")
#create tab object for genind
#sp_tab <- tab(sp_genind, freq=TRUE, NA.method="mean")
#run PCA
#sp_PCA <- dudi.pca(sp_tab, scale = FALSE, nf = 2, scannf = FALSE)
#create PCA data frame
#sp_PCA_df_temp <- as.data.frame(cbind(as.numeric(sp_PCA$li$Axis1),
#                                     as.numeric(sp_PCA$li$Axis2),
#                                    sp_df$Garden_Wild))
#colnames(sp_PCA_df_temp) <- c("Axis1","Axis2","Pop")
#calculate % variation explained by axis
#sp_pc1 <- signif(((sp_PCA$eig[1])/sum(sp_PCA$eig))*100, 3)
#sp_pc2 <- signif(((sp_PCA$eig[2])/sum(sp_PCA$eig))*100, 3)
#plot PCA
#pdf(paste0("../Analyses/Results/Clustering/", scenario_list[[sp]], "_garden_wild_PCA.pdf"),width = 10, height = 8)
#print(ggplot(sp_PCA_df_temp, aes(as.numeric(Axis1), as.numeric(Axis2), col = Pop)) + geom_point() +
#        stat_ellipse() +
#        xlab(paste0("PC1 (", sp_pc1, "%)")) +
#        ylab(paste0("PC2 (", sp_pc2, "%)")) +
#        theme_bw() +
#        scale_color_manual(values=hcl.colors(n = length(unique(sp_PCA_df_temp$Pop)), palette = "viridis")))
#dev.off()
}
#list of scenarios
scenario_list <- c("QUAC_wK", "QUAC_woK", "ZAIN_og", "ZAIN_rebinned")
#pop list
pop_list <- list(c(1:17), c(1:17), c(1:10), c(1:10),
c(18:22), c(18:21), c(11:35), c(11:35))
#loop to write garden and wild comparison PCA
for(sp in 1:length(scenario_list)){
#load genepop files as genind objects
sp_genind_temp <- read.genepop(paste0("Adegenet_Files/",sp_genind_list[[sp]]), ncode = 3)
#separate garden individuals into one population
sp_garden_genind <- repool(seppop(sp_genind_temp)[pop_list[[sp]]])
#rename populations
levels(sp_garden_genind@pop) <- rep("Garden", length(pop_list[[sp]]))
#separate wild individuals and garden individuals
sp_wild_genind <- repool(seppop(sp_genind_temp)[pop_list[[sp+4]]])
#rename to wild only
levels(sp_wild_genind@pop) <- rep("Wild", length(pop_list[[sp+4]]))
#combine into one genind object
sp_genind_rp <- repool(sp_garden_genind, sp_wild_genind)
#read in data frame
#sp_df <- read.csv(paste0("Data_Frames/", sp_df_list[[2]]))
#name rows in the genind object
#rownames(sp_genind@tab) <- sp_df[,1]
#name pops
#levels(sp_genind@pop) <- c("Garden", "Wild")
#create tab object for genind
#sp_tab <- tab(sp_genind, freq=TRUE, NA.method="mean")
#run PCA
#sp_PCA <- dudi.pca(sp_tab, scale = FALSE, nf = 2, scannf = FALSE)
#create PCA data frame
#sp_PCA_df_temp <- as.data.frame(cbind(as.numeric(sp_PCA$li$Axis1),
#                                     as.numeric(sp_PCA$li$Axis2),
#                                    sp_df$Garden_Wild))
#colnames(sp_PCA_df_temp) <- c("Axis1","Axis2","Pop")
#calculate % variation explained by axis
#sp_pc1 <- signif(((sp_PCA$eig[1])/sum(sp_PCA$eig))*100, 3)
#sp_pc2 <- signif(((sp_PCA$eig[2])/sum(sp_PCA$eig))*100, 3)
#plot PCA
#pdf(paste0("../Analyses/Results/Clustering/", scenario_list[[sp]], "_garden_wild_PCA.pdf"),width = 10, height = 8)
#print(ggplot(sp_PCA_df_temp, aes(as.numeric(Axis1), as.numeric(Axis2), col = Pop)) + geom_point() +
#        stat_ellipse() +
#        xlab(paste0("PC1 (", sp_pc1, "%)")) +
#        ylab(paste0("PC2 (", sp_pc2, "%)")) +
#        theme_bw() +
#        scale_color_manual(values=hcl.colors(n = length(unique(sp_PCA_df_temp$Pop)), palette = "viridis")))
#dev.off()
}
sp_genind_rp
#loop to write garden and wild comparison PCA
for(sp in 1:length(scenario_list)){
##code to reorganize genind objects into "garden" and "wild" genind objects
#load genepop files as genind objects
sp_genind_temp <- read.genepop(paste0("Adegenet_Files/",sp_genind_list[[sp]]), ncode = 3)
#separate garden individuals into one population
sp_garden_genind <- repool(seppop(sp_genind_temp)[pop_list[[sp]]])
#rename populations
levels(sp_garden_genind@pop) <- rep("Garden", length(pop_list[[sp]]))
#separate wild individuals and garden individuals
sp_wild_genind <- repool(seppop(sp_genind_temp)[pop_list[[sp+4]]])
#rename to wild only
levels(sp_wild_genind@pop) <- rep("Wild", length(pop_list[[sp+4]]))
#combine into one genind object
sp_genind_rp <- repool(sp_garden_genind, sp_wild_genind)
#create tab object for genind
sp_tab <- tab(sp_genind_rp, freq=TRUE, NA.method="mean")
#run PCA
sp_PCA <- dudi.pca(sp_tab, scale = FALSE, nf = 2, scannf = FALSE)
#create PCA data frame
sp_PCA_df_temp <- as.data.frame(cbind(as.numeric(sp_PCA$li$Axis1),
as.numeric(sp_PCA$li$Axis2),
sp_df$Garden_Wild))
colnames(sp_PCA_df_temp) <- c("Axis1","Axis2","Pop")
#calculate % variation explained by axis
#sp_pc1 <- signif(((sp_PCA$eig[1])/sum(sp_PCA$eig))*100, 3)
#sp_pc2 <- signif(((sp_PCA$eig[2])/sum(sp_PCA$eig))*100, 3)
#plot PCA
#pdf(paste0("../Analyses/Results/Clustering/", scenario_list[[sp]], "_garden_wild_PCA.pdf"),width = 10, height = 8)
#print(ggplot(sp_PCA_df_temp, aes(as.numeric(Axis1), as.numeric(Axis2), col = Pop)) + geom_point() +
#        stat_ellipse() +
#        xlab(paste0("PC1 (", sp_pc1, "%)")) +
#        ylab(paste0("PC2 (", sp_pc2, "%)")) +
#        theme_bw() +
#        scale_color_manual(values=hcl.colors(n = length(unique(sp_PCA_df_temp$Pop)), palette = "viridis")))
#dev.off()
}
sp_PCA
table(sp_genind_rp@pop)
sp_tab
sp_genind_rp
#run PCA
sp_PCA <- dudi.pca(sp_tab, scale = FALSE, nf = 2, scannf = FALSE)
sp_tab
sp_genind_rp@tab
?dudi.pca
#create tab object for genind
sp_tab <- tab(sp_genind_rp, freq=TRUE)
sp_tab
?tab
#create tab object for genind
sp_tab <- tab(sp_genind_rp, freq=TRUE, NA.method = "zero")
#run PCA
sp_PCA <- dudi.pca(sp_tab, scale = FALSE, nf = 2, scannf = FALSE)
sp_PCA
sp_PCA$li$Axis1
#create tab object for genind
sp_tab <- tab(sp_genind_rp, freq=TRUE, NA.method = "mean")
#run PCA
sp_PCA <- dudi.pca(sp_tab, scale = FALSE, nf = 2, scannf = FALSE)
#create PCA data frame
sp_PCA_df_temp <- as.data.frame(cbind(as.numeric(sp_PCA$li$Axis1),
as.numeric(sp_PCA$li$Axis2),
sp_df$Garden_Wild))
sp_PCA$li$Axis1
length(sp_PCA$li$Axis1)
length(sp_PCA$li$Axis2)
as.numeric(table(sp_garden_genind@pop))
rep("Garden", as.numeric(table(sp_garden_genind@pop)))
#loop to write garden and wild comparison PCA
for(sp in 1:length(scenario_list)){
##code to reorganize genind objects into "garden" and "wild" genind objects
#load genepop files as genind objects
sp_genind_temp <- read.genepop(paste0("Adegenet_Files/",sp_genind_list[[sp]]), ncode = 3)
#separate garden individuals into one population
sp_garden_genind <- repool(seppop(sp_genind_temp)[pop_list[[sp]]])
#rename populations
levels(sp_garden_genind@pop) <- rep("Garden", length(pop_list[[sp]]))
#separate wild individuals and garden individuals
sp_wild_genind <- repool(seppop(sp_genind_temp)[pop_list[[sp+4]]])
#rename to wild only
levels(sp_wild_genind@pop) <- rep("Wild", length(pop_list[[sp+4]]))
#combine into one genind object
sp_genind_rp <- repool(sp_garden_genind, sp_wild_genind)
#create tab object for genind
sp_tab <- tab(sp_genind_rp, freq=TRUE, NA.method = "mean")
#run PCA
sp_PCA <- dudi.pca(sp_tab, scale = FALSE, nf = 2, scannf = FALSE)
#create PCA data frame
sp_PCA_df_temp <- as.data.frame(cbind(as.numeric(sp_PCA$li$Axis1),
as.numeric(sp_PCA$li$Axis2),
c(rep("Garden", as.numeric(table(sp_garden_genind@pop))),
rep("Wild", as.numeric(table(sp_wild_genind@pop))))))
colnames(sp_PCA_df_temp) <- c("Axis1","Axis2","Pop")
#calculate % variation explained by axis
#sp_pc1 <- signif(((sp_PCA$eig[1])/sum(sp_PCA$eig))*100, 3)
#sp_pc2 <- signif(((sp_PCA$eig[2])/sum(sp_PCA$eig))*100, 3)
#plot PCA
#pdf(paste0("../Analyses/Results/Clustering/", scenario_list[[sp]], "_garden_wild_PCA.pdf"),width = 10, height = 8)
#print(ggplot(sp_PCA_df_temp, aes(as.numeric(Axis1), as.numeric(Axis2), col = Pop)) + geom_point() +
#        stat_ellipse() +
#        xlab(paste0("PC1 (", sp_pc1, "%)")) +
#        ylab(paste0("PC2 (", sp_pc2, "%)")) +
#        theme_bw() +
#        scale_color_manual(values=hcl.colors(n = length(unique(sp_PCA_df_temp$Pop)), palette = "viridis")))
#dev.off()
}
sp_PCA_df_temp$Axis1
#loop to write garden and wild comparison PCA
for(sp in 1:length(scenario_list)){
##code to reorganize genind objects into "garden" and "wild" genind objects
#load genepop files as genind objects
sp_genind_temp <- read.genepop(paste0("Adegenet_Files/",sp_genind_list[[sp]]), ncode = 3)
#separate garden individuals into one population
sp_garden_genind <- repool(seppop(sp_genind_temp)[pop_list[[sp]]])
#rename populations
levels(sp_garden_genind@pop) <- rep("Garden", length(pop_list[[sp]]))
#separate wild individuals and garden individuals
sp_wild_genind <- repool(seppop(sp_genind_temp)[pop_list[[sp+4]]])
#rename to wild only
levels(sp_wild_genind@pop) <- rep("Wild", length(pop_list[[sp+4]]))
#combine into one genind object
sp_genind_rp <- repool(sp_garden_genind, sp_wild_genind)
#create tab object for genind
sp_tab <- tab(sp_genind_rp, freq=TRUE, NA.method = "mean")
#run PCA
sp_PCA <- dudi.pca(sp_tab, scale = FALSE, nf = 2, scannf = FALSE)
#create PCA data frame
sp_PCA_df_temp <- as.data.frame(cbind(as.numeric(sp_PCA$li$Axis1),
as.numeric(sp_PCA$li$Axis2),
c(rep("Garden", as.numeric(table(sp_garden_genind@pop))),
rep("Wild", as.numeric(table(sp_wild_genind@pop))))))
colnames(sp_PCA_df_temp) <- c("Axis1","Axis2","Pop")
#calculate % variation explained by axis
sp_pc1 <- signif(((sp_PCA$eig[1])/sum(sp_PCA$eig))*100, 3)
sp_pc2 <- signif(((sp_PCA$eig[2])/sum(sp_PCA$eig))*100, 3)
#plot PCA
pdf(paste0("../Analyses/Results/Clustering/", scenario_list[[sp]], "_garden_wild_PCA.pdf"),width = 10, height = 8)
print(ggplot(sp_PCA_df_temp, aes(as.numeric(Axis1), as.numeric(Axis2), col = Pop)) + geom_point() +
stat_ellipse() +
xlab(paste0("PC1 (", sp_pc1, "%)")) +
ylab(paste0("PC2 (", sp_pc2, "%)")) +
theme_bw() +
scale_color_manual(values=hcl.colors(n = length(unique(sp_PCA_df_temp$Pop)), palette = "viridis")))
dev.off()
}
#loop to write garden and wild comparison PCA
for(sp in 1:length(scenario_list)){
##code to reorganize genind objects into "garden" and "wild" genind objects
#load genepop files as genind objects
sp_genind_temp <- read.genepop(paste0("Adegenet_Files/",sp_genind_list[[sp]]), ncode = 3)
#separate garden individuals into one population
sp_garden_genind <- repool(seppop(sp_genind_temp)[pop_list[[sp]]])
#rename populations
levels(sp_garden_genind@pop) <- rep("Garden", length(pop_list[[sp]]))
#separate wild individuals and garden individuals
sp_wild_genind <- repool(seppop(sp_genind_temp)[pop_list[[sp+4]]])
#rename to wild only
levels(sp_wild_genind@pop) <- rep("Wild", length(pop_list[[sp+4]]))
#combine into one genind object
sp_genind_rp <- repool(sp_garden_genind, sp_wild_genind)
#create tab object for genind
sp_tab <- tab(sp_genind_rp, freq=TRUE, NA.method = "mean")
#run PCA
sp_PCA <- dudi.pca(sp_tab, scale = FALSE, nf = 2, scannf = FALSE)
#create PCA data frame
sp_PCA_df_temp <- as.data.frame(cbind(as.numeric(sp_PCA$li$Axis1),
as.numeric(sp_PCA$li$Axis2),
c(rep("Garden", as.numeric(table(sp_garden_genind@pop))),
rep("Wild", as.numeric(table(sp_wild_genind@pop))))))
colnames(sp_PCA_df_temp) <- c("Axis1","Axis2","Pop")
#calculate % variation explained by axis
sp_pc1 <- signif(((sp_PCA$eig[1])/sum(sp_PCA$eig))*100, 3)
sp_pc2 <- signif(((sp_PCA$eig[2])/sum(sp_PCA$eig))*100, 3)
#plot PCA
pdf(paste0("../Analyses/Results/Clustering/PCA/", scenario_list[[sp]], "_garden_wild_PCA.pdf"),width = 10, height = 8)
print(ggplot(sp_PCA_df_temp, aes(as.numeric(Axis1), as.numeric(Axis2), col = Pop)) + geom_point() +
stat_ellipse() +
xlab(paste0("PC1 (", sp_pc1, "%)")) +
ylab(paste0("PC2 (", sp_pc2, "%)")) +
theme_bw() +
scale_color_manual(values=hcl.colors(n = length(unique(sp_PCA_df_temp$Pop)), palette = "viridis")))
dev.off()
}
#load in genind object
sp_genind_temp <- read.genepop(paste0("Adegenet_Files/", sp_genind_list[[1]]), ncode = 3)
#separate wild individuals and garden individuals
sp_wild_genind <- repool(seppop(sp_genind_temp)[pop_list[[1+4]]])
sp_wild_genind
table(sp_wild_genind@pop)
table(sp_genind_temp@pop)
#sp_allgarden_allwildpop_genind_list <- list.files(path = "Adegenet_Files", pattern = "clean.gen")
#sp_garden_allwildpop_genind_list <- list.files(path = "Adegenet_Files/Garden_Wild", pattern = "allwildpop")
#sp_garden_allwildpop_df_list <- list.files(path = "Data_Frames/Garden_Wild", pattern = "allwildpop")
sp_df_list <- list.files(path = "Data_Frames", pattern = "clean_df.csv")
sp_genind_temp
sp_df_list
#load data frame
sp_df <- read.csv(paste0("Data_Frames/", sp_df_list[[1]]))
sp_df[sp_df$Garden_Wild == "Wild",][,2]
unique(sp_df[sp_df$Garden_Wild == "Wild",][,2])
library(randomcoloR)
randomColor(count = 20)
?randomColor
#load in genind object
sp_genind_temp <- read.genepop(paste0("Adegenet_Files/", sp_genind_list[[1]]), ncode = 3)
#load data frame
sp_df <- read.csv(paste0("Data_Frames/", sp_df_list[[1]]))
#separate wild individuals
sp_wild_genind <- repool(seppop(sp_genind_temp)[pop_list[[1+4]]])
#name populations in wild genind object
pop_names <- unique(sp_df[sp_df$Garden_Wild == "Wild",][,2])
#convert to genpop object
sp_wild_genpop <- genind2genpop(sp_wild_genind)
#create tab object for genind
sp_tab <- tab(sp_wild_genpop, freq=TRUE, NA.method="mean")
#run PCA
sp_PCA <- dudi.pca(sp_tab, scale = FALSE, nf = 2, scannf = FALSE)
#create PCA data frame
sp_PCA_df_temp <- as.data.frame(cbind(as.numeric(sp_PCA$li$Axis1),
as.numeric(sp_PCA$li$Axis2),
pop_names))
colnames(sp_PCA_df_temp) <- c("Axis1","Axis2","Pop")
#calculate % variation explained by axis
sp_pc1 <- signif(((sp_PCA$eig[1])/sum(sp_PCA$eig))*100, 3)
sp_pc2 <- signif(((sp_PCA$eig[2])/sum(sp_PCA$eig))*100, 3)
print(ggplot(sp_PCA_df_temp, aes(as.numeric(Axis1), as.numeric(Axis2), col = Pop)) + geom_point() +
stat_ellipse() +
xlab(paste0("PC1 (", sp_pc1, "%)")) +
ylab(paste0("PC2 (", sp_pc2, "%)")) +
theme_bw() +
scale_color_manual(values=randomColor(count = length(unique(sp_PCA_df_temp$Pop)))))
#loop to generate all wild pops PCA
for(sp in 1:length(scenario_list)){
#load in genind object
sp_genind_temp <- read.genepop(paste0("Adegenet_Files/", sp_genind_list[[1]]), ncode = 3)
#load data frame
sp_df <- read.csv(paste0("Data_Frames/", sp_df_list[[sp]]))
#separate wild individuals
sp_wild_genind <- repool(seppop(sp_genind_temp)[pop_list[[sp+4]]])
#create tab object for genind
sp_tab <- tab(sp_wild_genpop, freq=TRUE, NA.method="mean")
#run PCA
sp_PCA <- dudi.pca(sp_tab, scale = FALSE, nf = 2, scannf = FALSE)
#create PCA data frame
sp_PCA_df_temp <- as.data.frame(cbind(as.numeric(sp_PCA$li$Axis1),
as.numeric(sp_PCA$li$Axis2),
sp_df[,2]))
colnames(sp_PCA_df_temp) <- c("Axis1","Axis2","Pop")
#calculate % variation explained by axis
sp_pc1 <- signif(((sp_PCA$eig[1])/sum(sp_PCA$eig))*100, 3)
sp_pc2 <- signif(((sp_PCA$eig[2])/sum(sp_PCA$eig))*100, 3)
#plot PCA
pdf(paste0("../Analyses/Results/Clustering/PCA/", species_list[[sp]], "_wildpop_PCA.pdf"),width = 10, height = 8)
print(ggplot(sp_PCA_df_temp, aes(as.numeric(Axis1), as.numeric(Axis2), col = Pop)) + geom_point() +
stat_ellipse() +
xlab(paste0("PC1 (", sp_pc1, "%)")) +
ylab(paste0("PC2 (", sp_pc2, "%)")) +
theme_bw() +
scale_color_manual(values=randomColor(count = length(unique(sp_PCA_df_temp$Pop)))))
dev.off()
}
#loop to generate all wild pops PCA
for(sp in 1:length(scenario_list)){
#load in genind object
sp_genind_temp <- read.genepop(paste0("Adegenet_Files/", sp_genind_list[[1]]), ncode = 3)
#load data frame
sp_df <- read.csv(paste0("Data_Frames/", sp_df_list[[sp]]))
#separate wild individuals
sp_wild_genind <- repool(seppop(sp_genind_temp)[pop_list[[sp+4]]])
#create tab object for genind
sp_tab <- tab(sp_wild_genind, freq=TRUE, NA.method="mean")
#run PCA
sp_PCA <- dudi.pca(sp_tab, scale = FALSE, nf = 2, scannf = FALSE)
#create PCA data frame
sp_PCA_df_temp <- as.data.frame(cbind(as.numeric(sp_PCA$li$Axis1),
as.numeric(sp_PCA$li$Axis2),
sp_df[,2]))
colnames(sp_PCA_df_temp) <- c("Axis1","Axis2","Pop")
#calculate % variation explained by axis
sp_pc1 <- signif(((sp_PCA$eig[1])/sum(sp_PCA$eig))*100, 3)
sp_pc2 <- signif(((sp_PCA$eig[2])/sum(sp_PCA$eig))*100, 3)
#plot PCA
pdf(paste0("../Analyses/Results/Clustering/PCA/", species_list[[sp]], "_wildpop_PCA.pdf"),width = 10, height = 8)
print(ggplot(sp_PCA_df_temp, aes(as.numeric(Axis1), as.numeric(Axis2), col = Pop)) + geom_point() +
stat_ellipse() +
xlab(paste0("PC1 (", sp_pc1, "%)")) +
ylab(paste0("PC2 (", sp_pc2, "%)")) +
theme_bw() +
scale_color_manual(values=randomColor(count = length(unique(sp_PCA_df_temp$Pop)))))
dev.off()
}
#loop to generate all wild pops PCA
for(sp in 1:length(scenario_list)){
#load in genind object
sp_genind_temp <- read.genepop(paste0("Adegenet_Files/", sp_genind_list[[sp]]), ncode = 3)
#load data frame
sp_df <- read.csv(paste0("Data_Frames/", sp_df_list[[sp]]))
#separate wild individuals
sp_wild_genind <- repool(seppop(sp_genind_temp)[pop_list[[sp+4]]])
#create tab object for genind
sp_tab <- tab(sp_wild_genind, freq=TRUE, NA.method="mean")
#run PCA
sp_PCA <- dudi.pca(sp_tab, scale = FALSE, nf = 2, scannf = FALSE)
#create PCA data frame
sp_PCA_df_temp <- as.data.frame(cbind(as.numeric(sp_PCA$li$Axis1),
as.numeric(sp_PCA$li$Axis2),
sp_df[,2]))
colnames(sp_PCA_df_temp) <- c("Axis1","Axis2","Pop")
#calculate % variation explained by axis
sp_pc1 <- signif(((sp_PCA$eig[1])/sum(sp_PCA$eig))*100, 3)
sp_pc2 <- signif(((sp_PCA$eig[2])/sum(sp_PCA$eig))*100, 3)
#plot PCA
pdf(paste0("../Analyses/Results/Clustering/PCA/", species_list[[sp]], "_wildpop_PCA.pdf"),width = 10, height = 8)
print(ggplot(sp_PCA_df_temp, aes(as.numeric(Axis1), as.numeric(Axis2), col = Pop)) + geom_point() +
stat_ellipse() +
xlab(paste0("PC1 (", sp_pc1, "%)")) +
ylab(paste0("PC2 (", sp_pc2, "%)")) +
theme_bw() +
scale_color_manual(values=randomColor(count = length(unique(sp_PCA_df_temp$Pop)))))
dev.off()
}
sp_genind_temp
sp_wild_genind
sp_PCA_df_temp
print(ggplot(sp_PCA_df_temp, aes(as.numeric(Axis1), as.numeric(Axis2), col = Pop)) + geom_point() +
stat_ellipse() +
xlab(paste0("PC1 (", sp_pc1, "%)")) +
ylab(paste0("PC2 (", sp_pc2, "%)")) +
theme_bw() +
scale_color_manual(values=randomColor(count = length(unique(sp_PCA_df_temp$Pop)))))
#loop to generate all wild pops PCA
for(sp in 1:length(scenario_list)){
#load in genind object
sp_genind_temp <- read.genepop(paste0("Adegenet_Files/", sp_genind_list[[sp]]), ncode = 3)
#load data frame
sp_df <- read.csv(paste0("Data_Frames/", sp_df_list[[sp]]))
#separate wild individuals
sp_wild_genind <- repool(seppop(sp_genind_temp)[pop_list[[sp+4]]])
#create tab object for genind
sp_tab <- tab(sp_wild_genind, freq=TRUE, NA.method="mean")
#run PCA
sp_PCA <- dudi.pca(sp_tab, scale = FALSE, nf = 2, scannf = FALSE)
#create PCA data frame
sp_PCA_df_temp <- as.data.frame(cbind(as.numeric(sp_PCA$li$Axis1),
as.numeric(sp_PCA$li$Axis2),
sp_df[,2]))
colnames(sp_PCA_df_temp) <- c("Axis1","Axis2","Pop")
#calculate % variation explained by axis
sp_pc1 <- signif(((sp_PCA$eig[1])/sum(sp_PCA$eig))*100, 3)
sp_pc2 <- signif(((sp_PCA$eig[2])/sum(sp_PCA$eig))*100, 3)
#plot PCA
pdf(paste0("../Analyses/Results/Clustering/PCA/", species_list[[sp]], "_wildpop_PCA.pdf"),width = 10, height = 8)
print(ggplot(sp_PCA_df_temp, aes(as.numeric(Axis1), as.numeric(Axis2), col = Pop)) + geom_point() +
stat_ellipse() +
xlab(paste0("PC1 (", sp_pc1, "%)")) +
ylab(paste0("PC2 (", sp_pc2, "%)")) +
theme_bw() +
scale_color_manual(values=randomColor(count = length(unique(sp_PCA_df_temp$Pop)))))
dev.off()
}
#loop to generate garden vs. all wild pops PCA
for(sp in 1:length(scenario_list)){
#load in genind object
sp_genind_temp <- read.genepop(paste0("Adegenet_Files/", sp_genind_list[[sp]]), ncode = 3)
#load in species data frame
sp_df <- read.csv(paste0("Data_Frames/", sp_df_list[[sp]]))
#separate garden individuals into one population
sp_garden_genind <- repool(seppop(sp_genind_temp)[pop_list[[sp]]])
#rename populations
levels(sp_garden_genind@pop) <- rep("Garden", length(pop_list[[sp]]))
#separate wild individuals
sp_wild_genind <- repool(seppop(sp_genind_temp)[pop_list[[sp+4]]])
#name pops by wild pop
levels(sp_wild_genind@pop) <- unique(sp_df[,2])
#combine objects into one genind object from wild and garden processing
sp_garden_allwildpop_genind <- repool(sp_garden_genind, sp_wild_genind)
#create tab object for genind
sp_tab <- tab(sp_garden_allwildpop_genind, freq=TRUE, NA.method="mean")
#run PCA
sp_PCA <- dudi.pca(sp_tab, scale = FALSE, nf = 2, scannf = FALSE)
#create PCA data frame
sp_PCA_df_temp <- as.data.frame(cbind(as.numeric(sp_PCA$li$Axis1),
as.numeric(sp_PCA$li$Axis2),
sp_df[,2]))
colnames(sp_PCA_df_temp) <- c("Axis1","Axis2","Pop")
#calculate % variation explained by axis
sp_pc1 <- signif(((sp_PCA$eig[1])/sum(sp_PCA$eig))*100, 3)
sp_pc2 <- signif(((sp_PCA$eig[2])/sum(sp_PCA$eig))*100, 3)
#plot PCA
pdf(paste0("../Analyses/Results/Clustering/PCA/", species_list[[sp]], "_garden_allwildpop_PCA.pdf"),width = 10, height = 8)
print(ggplot(sp_PCA_df_temp, aes(as.numeric(Axis1), as.numeric(Axis2), col = Pop)) + geom_point() +
stat_ellipse() +
xlab(paste0("PC1 (", sp_pc1, "%)")) +
ylab(paste0("PC2 (", sp_pc2, "%)")) +
theme_bw() +
scale_color_manual(values=hcl.colors(n = length(unique(sp_PCA_df_temp$Pop)), palette = "viridis")))
dev.off()
}
sp_genind_tempsp_garden_allwildpop_genind
sp_garden_allwildpop_genind
table(sp_garden_allwildpop_genind@pop)
#run PCA
sp_PCA <- dudi.pca(sp_tab, scale = FALSE, nf = 2, scannf = FALSE)
#create PCA data frame
sp_PCA_df_temp <- as.data.frame(cbind(as.numeric(sp_PCA$li$Axis1),
as.numeric(sp_PCA$li$Axis2),
sp_df[,2]))
colnames(sp_PCA_df_temp) <- c("Axis1","Axis2","Pop")
#calculate % variation explained by axis
sp_pc1 <- signif(((sp_PCA$eig[1])/sum(sp_PCA$eig))*100, 3)
sp_pc2 <- signif(((sp_PCA$eig[2])/sum(sp_PCA$eig))*100, 3)
print(ggplot(sp_PCA_df_temp, aes(as.numeric(Axis1), as.numeric(Axis2), col = Pop)) + geom_point() +
stat_ellipse() +
xlab(paste0("PC1 (", sp_pc1, "%)")) +
ylab(paste0("PC2 (", sp_pc2, "%)")) +
theme_bw() +
scale_color_manual(values=hcl.colors(n = length(unique(sp_PCA_df_temp$Pop)), palette = "viridis")))
sp_garden_genind
table(sp_garden_genind)
table(sp_garden_genind@pop)
