ggplot(QUAC_allrich_woK_df, aes(x = Pop, y = All_Rich, fill = Pop_Type)) +
geom_boxplot() +
scale_fill_manual(values = c("darkseagreen1", "darkgreen"),
labels = expression("Garden", "Wild")) +
ylim(0,20) +
scale_x_discrete(limits=c("QUAC_woK_Garden", "QUAC_woK_Wild",
"QUAC_woK_ESTSSR_Garden", "QUAC_woK_ESTSSR_Wild",
"QUAC_woK_garden_wild_gSSR_Garden",
"QUAC_woK_garden_wild_gSSR_Wild",
"ZAIN_rebinned_Garden",
"ZAIN_rebinned_Wild")) +
xlab("Population Type") + ylab("Allelic Richness") +
theme_bw()
#name columns of the data frame
colnames(allrich_df) <- c("Pop", "All_Rich", "Pop_Type", "Species")
#ok let's try this again
ggplot(QUAC_allrich_woK_df, aes(x = Pop, y = All_Rich, fill = Pop_Type)) +
geom_boxplot() +
scale_fill_manual(values = c("darkseagreen1", "darkgreen"),
labels = expression("Garden", "Wild")) +
ylim(0,20) +
scale_x_discrete(limits=c("QUAC_woK_Garden", "QUAC_woK_Wild",
"QUAC_woK_ESTSSR_Garden", "QUAC_woK_ESTSSR_Wild",
"QUAC_woK_garden_wild_gSSR_Garden",
"QUAC_woK_garden_wild_gSSR_Wild",
"ZAIN_rebinned_Garden",
"ZAIN_rebinned_Wild")) +
xlab("Population Type") + ylab("Allelic Richness") +
theme_bw()
#ok let's try this again
ggplot(allrich_df, aes(x = Pop, y = All_Rich, fill = Pop_Type)) +
geom_boxplot() +
scale_fill_manual(values = c("darkseagreen1", "darkgreen"),
labels = expression("Garden", "Wild")) +
ylim(0,20) +
scale_x_discrete(limits=c("QUAC_woK_Garden", "QUAC_woK_Wild",
"QUAC_woK_ESTSSR_Garden", "QUAC_woK_ESTSSR_Wild",
"QUAC_woK_garden_wild_gSSR_Garden",
"QUAC_woK_garden_wild_gSSR_Wild",
"ZAIN_rebinned_Garden",
"ZAIN_rebinned_Wild")) +
xlab("Population Type") + ylab("Allelic Richness") +
theme_bw()
#ok let's try this again
ggplot(allrich_df, aes(x = Pop, y = All_Rich, fill = Pop_Type)) +
geom_boxplot() +
scale_fill_manual(values = c("darkseagreen1", "darkgreen"),
labels = expression("Garden", "Wild")) +
ylim(0,20) +
scale_x_discrete(limits=c("QUAC_woK_Garden", "QUAC_woK_Wild",
"QUAC_woK_ESTSSR_Garden", "QUAC_woK_ESTSSR_Wild",
"QUAC_woK_garden_wild_gSSR_Garden",
"QUAC_woK_garden_wild_gSSR_Wild",
"ZAIN_rebinned_Garden",
"ZAIN_rebinned_Wild")) +
xlab("Population Type") + ylab("Allelic Richness") +
facet_wrap(~Species, scale="free") + theme_bw()
#ok let's try this again
ggplot(allrich_df, aes(x = Pop, y = All_Rich, fill = Pop_Type)) +
geom_boxplot() +
scale_fill_manual(values = c("darkseagreen1", "darkgreen"),
labels = expression("Garden", "Wild")) +
ylim(0,20) +
scale_x_discrete(limits=c(c("QUAC_woK_Garden", "QUAC_woK_Wild",
"QUAC_woK_ESTSSR_Garden", "QUAC_woK_ESTSSR_Wild",
"QUAC_woK_garden_wild_gSSR_Garden",
"QUAC_woK_garden_wild_gSSR_Wild"), c("ZAIN_rebinned_Garden",
"ZAIN_rebinned_Wild"))) +
xlab("Population Type") + ylab("Allelic Richness") +
facet_wrap(~Species, scale="free") + theme_bw()
#ok let's try this again
ggplot(allrich_df, aes(x = Pop, y = All_Rich, fill = Pop_Type)) +
geom_boxplot() +
scale_fill_manual(values = c("darkseagreen1", "darkgreen"),
labels = expression("Garden", "Wild")) +
ylim(0,20) +
xlab("Population Type") + ylab("Allelic Richness") +
facet_wrap(~Species, scale="free") + theme_bw()
allrich_df
allrich_df <- rbind(QUAC_allrich_woK_df, ZAIN_allrich_df[23:44,])
#ok let's try this again
ggplot(allrich_df, aes(x = Pop, y = All_Rich, fill = Pop_Type)) +
geom_boxplot() +
scale_fill_manual(values = c("darkseagreen1", "darkgreen"),
labels = expression("Garden", "Wild")) +
ylim(0,20) +
xlab("Population Type") + ylab("Allelic Richness") +
facet_wrap(~Species, scale="free") + theme_bw()
allrich_df
#add a species column
allrich_df <- allrich_df %>%
mutate(Species = gsub('_.*','',allrich_df$key))
allrich_df
#ok let's try this again
ggplot(allrich_df, aes(x = Pop, y = All_Rich, fill = Pop_Type)) +
geom_boxplot() +
scale_fill_manual(values = c("darkseagreen1", "darkgreen"),
labels = expression("Garden", "Wild")) +
ylim(0,20) +
xlab("Population Type") + ylab("Allelic Richness") +
facet_wrap(~Species, scale="free") + theme_bw()
#name columns of the data frame
colnames(allrich_df) <- c("Pop", "All_Rich", "Pop_Type", "Species")
#ok let's try this again
ggplot(allrich_df, aes(x = Pop, y = All_Rich, fill = Pop_Type)) +
geom_boxplot() +
scale_fill_manual(values = c("darkseagreen1", "darkgreen"),
labels = expression("Garden", "Wild")) +
ylim(0,20) +
xlab("Population Type") + ylab("Allelic Richness") +
facet_wrap(~Species, scale="free") + theme_bw()
reorder(allrich_df$Pop)
install.packages("reorder_within")
#ok let's try this again
ggplot(allrich_df, aes(x = Pop, y = All_Rich, fill = Pop_Type)) +
geom_boxplot() +
scale_fill_manual(values = c("darkseagreen1", "darkseagreen"),
labels = expression("Garden", "Wild")) +
ylim(0,20) +
xlab("Population Type") + ylab("Allelic Richness") +
facet_wrap(~Species, scale="free") + theme_bw()
allrich_df[,1]
allrich_df[1,1] == "QUAC_woK_Wild"
allrich_df[1,1] == "QUAC_woK_Garden"
allrich_df[a,1] == "QUAC_woK_Garden"
allrich_df[1,1] == "QUAC_woK_Garden"
th <- allrich_df[1,1] == "QUAC_woK_Garden"
th
#rename
for(a in 1:length(allrich_df[,1])){
tf <- allrich_df[a,1] == "QUAC_woK_Garden"
tf2 <- allrich_df[a,1] == "QUAC_woK_Wild"
if(tf == TRUE){
allrich_df[a,1] <- "QUAC_A_woK_Garden"
}
if(tf2 == TRUE){
allrich_df[a,1] <- "QUAC_A_woK_Wild"
}
}
allrich_df
#ok let's try this again
ggplot(allrich_df, aes(x = Pop, y = All_Rich, fill = Pop_Type)) +
geom_boxplot() +
scale_fill_manual(values = c("darkseagreen1", "darkseagreen"),
labels = expression("Garden", "Wild")) +
ylim(0,20) +
xlab("Population Type") + ylab("Allelic Richness") +
facet_wrap(~Species, scale="free") + theme_bw()
#ok let's try this again
ggplot(allrich_df, aes(x = Pop, y = All_Rich, fill = Pop_Type)) +
geom_boxplot() +
scale_fill_manual(values = c("darkseagreen1", "darkseagreen"),
labels = expression("Garden", "Wild")) +
scale_color_manual(labels=c("Garden","Wild",
"EST Garden","EST Wild",
"gSSR Garden", "gSSR Wild",
"Garden", "Wild"))
#ok let's try this again
ggplot(allrich_df, aes(x = Pop, y = All_Rich, fill = Pop_Type)) +
geom_boxplot() +
scale_fill_manual(values = c("darkseagreen1", "darkseagreen"),
labels = expression("Garden", "Wild")) +
scale_color_manual(labels=c("Garden","Wild",
"EST Garden","EST Wild",
"gSSR Garden", "gSSR Wild",
"Garden", "Wild")) +
ylim(0,20) +
xlab("Population Type") + ylab("Allelic Richness") +
facet_wrap(~Species, scale="free") + theme_bw()
#ok let's try this again
ggplot(allrich_df, aes(x = Pop, y = All_Rich, fill = Pop_Type)) +
geom_boxplot() +
scale_fill_manual(values = c("darkseagreen1", "darkseagreen"),
labels = expression("Garden", "Wild")) +
scale_color_manual(labels=c("Garden","Wild",
"EST Garden","EST Wild",
"gSSR Garden", "gSSR Wild",
"Garden", "Wild")) +
ylim(0,20) +
xlab("Population Type") + ylab("Allelic Richness") +
facet_wrap(~Species, scale="free") + theme_bw()
#ok let's try this again
pdf("../Analyses/Results/Garden_Wild_Comparison/QUAC_ZAIN_barplot.pdf")
ggplot(allrich_df, aes(x = Pop, y = All_Rich, fill = Pop_Type)) +
geom_boxplot() +
scale_fill_manual(values = c("darkseagreen1", "darkseagreen"),
labels = expression("Garden", "Wild")) +
scale_color_manual(labels=c("Garden","Wild",
"EST Garden","EST Wild",
"gSSR Garden", "gSSR Wild",
"Garden", "Wild")) +
ylim(0,20) +
xlab("Population Type") + ylab("Allelic Richness") +
facet_wrap(~Species, scale="free") + theme_bw()
dev.off()
#ok let's try this again
pdf("../Analyses/Results/Garden_Wild_Comparison/QUAC_ZAIN_barplot.pdf", width = 12, height = 8)
ggplot(allrich_df, aes(x = Pop, y = All_Rich, fill = Pop_Type)) +
geom_boxplot() +
scale_fill_manual(values = c("darkseagreen1", "darkseagreen"),
labels = expression("Garden", "Wild")) +
scale_color_manual(labels=c("Garden","Wild",
"EST Garden","EST Wild",
"gSSR Garden", "gSSR Wild",
"Garden", "Wild")) +
ylim(0,20) +
xlab("Population Type") + ylab("Allelic Richness") +
facet_wrap(~Species, scale="free") + theme_bw()
dev.off()
source("../Analyses/RScripts/resampling.R")
#load in function to calculate allele frequency categories
source("../Analyses/Functions/RScripts/Fa_sample_funcs.R")
source("../Analyses/Functions/RScripts/resampling.R")
#load in function to calculate allele frequency categories
source("../Analyses/Functions/Fa_sample_funcs.R")
source("../Analyses/Functions/resampling.R")
#This function is run to output the resampling graphs for
QUAC_resampling_df <- read.csv("../Analyses/Results/Garden_Wild_Comparison/QUAC_woK_resampling_df0.csv")
#This function is run to output the resampling graphs for
QUAC_resampling_df <- read.csv("../Analyses/Results/Garden_Wild_Comparison/QUAC_woK_resampling_df0.csv")
ZAIN_resampling_df <- read.csv("../Analyses/Results/Garden_Wild_Comparison/ZAIN_rebinned_resampling_df0.csv")
#add points
plot(QUAC_resampling_df[,1], col = "red", pch = 20, xlab = "Number of Individuals",
ylab = "Percent Diversity Capture", xlim = c(0,length(rownames(resampling))), ylim = c(0,100), cex = 1.2,
main = "Percent Diversity Capture (All Alleles Included)")
#add points
plot(QUAC_resampling_df[,1], col = "red", pch = 20, xlab = "Number of Individuals",
ylab = "Percent Diversity Capture", xlim = c(0,length(rownames(QUAC_resampling_df))), ylim = c(0,100), cex = 1.2,
main = "Percent Diversity Capture (All Alleles Included)")
head(QUAC_resampling_df)
#add points
plot(QUAC_resampling_df[,1], col = "red", pch = 20, xlab = "Number of Individuals",
ylab = "Percent Diversity Capture", xlim = c(0,length(rownames(QUAC_resampling_df))), ylim = c(0,100), cex = 1.2,
main = "Percent Diversity Capture (All Alleles Included)")
max(QUAC_resampling_df[,1])
#add points
plot(QUAC_resampling_df[,2], col = "red", pch = 20, xlab = "Number of Individuals",
ylab = "Percent Diversity Capture", xlim = c(0,length(rownames(QUAC_resampling_df))), ylim = c(0,100), cex = 1.2,
main = "Percent Diversity Capture (All Alleles Included)")
points(QUAC_resampling_df[,2], col = "firebrick", pch = 20, cex = 1.2)
points(QUAC_resampling_df[,3], col = "darkorange3", pch = 20, cex = 1.2)
points(QUAC_resampling_df[,4], col = "coral", pch = 20, cex = 1.2)
points(QUAC_resampling_df[,5], col = "deeppink4", pch = 20, cex = 1.2)
#add points
plot(QUAC_resampling_df[,2], col = "red", pch = 20, xlab = "Number of Individuals",
ylab = "Percent Diversity Capture", xlim = c(0,length(rownames(QUAC_resampling_df))), ylim = c(0,100), cex = 1.2,
main = "Percent Diversity Capture (All Alleles Included)")
points(QUAC_resampling_df[,3], col = "firebrick", pch = 20, cex = 1.2)
points(QUAC_resampling_df[,4], col = "darkorange3", pch = 20, cex = 1.2)
points(QUAC_resampling_df[,5], col = "coral", pch = 20, cex = 1.2)
points(QUAC_resampling_df[,6], col = "deeppink4", pch = 20, cex = 1.2)
legend('bottomright', legend = c("Global", "Very Common", "Common", "Uncommon","Rare"),
col = c("red", "firebrick", "darkorange3", "coral", "deeppink4"), pch = "_")
#write PDF with name
pdf("QUAC_resample_plot_woK_ndrop0.pdf", width = 10, height = 8)
#add points
plot(QUAC_resampling_df[,2], col = "red", pch = 20, xlab = "Number of Individuals",
ylab = "Percent Diversity Capture", xlim = c(0,length(rownames(QUAC_resampling_df))), ylim = c(0,100), cex = 1.2,
main = "Percent Diversity Capture (All Alleles Included)")
points(QUAC_resampling_df[,3], col = "firebrick", pch = 20, cex = 1.2)
points(QUAC_resampling_df[,4], col = "darkorange3", pch = 20, cex = 1.2)
points(QUAC_resampling_df[,5], col = "coral", pch = 20, cex = 1.2)
points(QUAC_resampling_df[,6], col = "deeppink4", pch = 20, cex = 1.2)
legend('bottomright', legend = c("Global", "Very Common", "Common", "Uncommon","Rare"),
col = c("red", "firebrick", "darkorange3", "coral", "deeppink4"), pch = "_")
dev.off()
#write PDF with name
pdf("../Analyses/Results/Garden_Wild_Comparison/QUAC_resample_plot_woK_ndrop0.pdf", width = 10, height = 8)
#add points
plot(QUAC_resampling_df[,2], col = "red", pch = 20, xlab = "Number of Individuals",
ylab = "Percent Diversity Capture", xlim = c(0,length(rownames(QUAC_resampling_df))), ylim = c(0,100), cex = 1.2,
main = "Percent Diversity Capture (All Alleles Included)")
points(QUAC_resampling_df[,3], col = "firebrick", pch = 20, cex = 1.2)
points(QUAC_resampling_df[,4], col = "darkorange3", pch = 20, cex = 1.2)
points(QUAC_resampling_df[,5], col = "coral", pch = 20, cex = 1.2)
points(QUAC_resampling_df[,6], col = "deeppink4", pch = 20, cex = 1.2)
legend('bottomright', legend = c("Global", "Very Common", "Common", "Uncommon","Rare"),
col = c("red", "firebrick", "darkorange3", "coral", "deeppink4"), pch = "_")
dev.off()
#write PDF with name
pdf("../Analyses/Results/Garden_Wild_Comparison/QUAC_resample_plot_woK_ndrop0.pdf", width = 10, height = 8)
#add points
plot(QUAC_resampling_df[,2], col = "red", pch = 20, xlab = "Number of Individuals",
ylab = "Percent Diversity Capture", xlim = c(0,length(rownames(QUAC_resampling_df))), ylim = c(0,100), cex = 1.2,
main = "Percent Diversity Capture (All Alleles Included)")
points(QUAC_resampling_df[,4], col = "darkorange3", pch = 20, cex = 1.2)
points(QUAC_resampling_df[,5], col = "coral", pch = 20, cex = 1.2)
points(QUAC_resampling_df[,6], col = "deeppink4", pch = 20, cex = 1.2)
legend('bottomright', legend = c("Global", "Common", "Low Frequency","Rare"),
col = c("red", "firebrick", "darkorange3", "coral", "deeppink4"), pch = "_")
dev.off()
#add points
plot(QUAC_resampling_df[,2], col = "red", pch = 20, xlab = "Number of Individuals",
ylab = "Percent Diversity Capture", xlim = c(0,length(rownames(QUAC_resampling_df))), ylim = c(0,100), cex = 1.2,
main = "Percent Diversity Capture (All Alleles Included)")
points(QUAC_resampling_df[,4], col = "darkorange3", pch = 20, cex = 1.2)
points(QUAC_resampling_df[,5], col = "coral", pch = 20, cex = 1.2)
points(QUAC_resampling_df[,6], col = "deeppink4", pch = 20, cex = 1.2)
legend('bottomright', legend = c("Global", "Common", "Low Frequency","Rare"),
col = c("red", "darkorange3", "coral", "deeppink4"), pch = "_")
#add points
plot(ZAIN_resampling_df[,2], col = "red", pch = 20, xlab = "Number of Individuals",
ylab = "Percent Diversity Capture", xlim = c(0,length(rownames(ZAIN_resampling_df))), ylim = c(0,100), cex = 1.2,
main = "Percent Diversity Capture (All Alleles Included)")
points(ZAIN_resampling_df[,4], col = "darkorange3", pch = 20, cex = 1.2)
points(ZAIN_resampling_df[,5], col = "coral", pch = 20, cex = 1.2)
points(ZAIN_resampling_df[,6], col = "deeppink4", pch = 20, cex = 1.2)
legend('bottomright', legend = c("Global", "Common", "Low Frequency","Rare"),
col = c("red", "darkorange3", "coral", "deeppink4"), pch = "_")
pdf("../Analyses/Results/Garden_Wild_Comparison/ZAIN_resample_plot_rebinned_ndrop0.pdf", width = 10, height = 8)
#add points
plot(ZAIN_resampling_df[,2], col = "red", pch = 20, xlab = "Number of Individuals",
ylab = "Percent Diversity Capture", xlim = c(0,length(rownames(ZAIN_resampling_df))), ylim = c(0,100), cex = 1.2,
main = "Percent Diversity Capture (All Alleles Included)")
points(ZAIN_resampling_df[,4], col = "darkorange3", pch = 20, cex = 1.2)
points(ZAIN_resampling_df[,5], col = "coral", pch = 20, cex = 1.2)
points(ZAIN_resampling_df[,6], col = "deeppink4", pch = 20, cex = 1.2)
legend('bottomright', legend = c("Global", "Common", "Low Frequency","Rare"),
col = c("red", "darkorange3", "coral", "deeppink4"), pch = "_")
dev.off()
abline(h = 95, col = "darkslategray4", lty=2, lwd = 3)
#add points
plot(ZAIN_resampling_df[,2], col = "red", pch = 20, xlab = "Number of Individuals",
ylab = "Percent Diversity Capture", xlim = c(0,length(rownames(ZAIN_resampling_df))), ylim = c(0,100), cex = 1.2,
main = "Percent Diversity Capture (All Alleles Included)")
points(ZAIN_resampling_df[,4], col = "darkorange3", pch = 20, cex = 1.2)
points(ZAIN_resampling_df[,5], col = "coral", pch = 20, cex = 1.2)
points(ZAIN_resampling_df[,6], col = "deeppink4", pch = 20, cex = 1.2)
#add line for 95% capture
abline(h = 95, col = "darkslategray4", lty=2, lwd = 3)
#legend
legend('bottomright', legend = c("Global", "Common", "Low Frequency","Rare", "95% diversity capture"),
lwd = 2, cex = 1.2,
col = c("red", "darkorange3", "coral", "deeppink4", "darkslategray4"),
lty = 1)
#add points
plot(ZAIN_resampling_df[,2], col = "red", pch = 20, xlab = "Number of Individuals",
ylab = "Percent Diversity Capture", xlim = c(0,length(rownames(ZAIN_resampling_df))), ylim = c(0,100), cex = 1.2,
main = "Percent Diversity Capture (All Alleles Included)")
points(ZAIN_resampling_df[,4], col = "darkorange3", pch = 20, cex = 1.2)
points(ZAIN_resampling_df[,5], col = "coral", pch = 20, cex = 1.2)
points(ZAIN_resampling_df[,6], col = "deeppink4", pch = 20, cex = 1.2)
#add line for 95% capture
abline(h = 95, col = "darkslategray4", lty=2, lwd = 3)
#legend
legend('bottomright', legend = c("Global", "Common", "Low Frequency","Rare", "95% diversity capture"),
lwd = 2, cex = 1.2,
col = c("red", "darkorange3", "coral", "deeppink4", "darkslategray4"),
lty = 1)
pdf("../Analyses/Results/Garden_Wild_Comparison/ZAIN_resample_plot_rebinned_ndrop0.pdf", width = 10, height = 8)
#add points
plot(ZAIN_resampling_df[,2], col = "red", pch = 20, xlab = "Number of Individuals",
ylab = "Percent Diversity Capture", xlim = c(0,length(rownames(ZAIN_resampling_df))), ylim = c(0,100), cex = 1.2,
main = "Percent Diversity Capture (All Alleles Included)")
points(ZAIN_resampling_df[,4], col = "darkorange3", pch = 20, cex = 1.2)
points(ZAIN_resampling_df[,5], col = "coral", pch = 20, cex = 1.2)
points(ZAIN_resampling_df[,6], col = "deeppink4", pch = 20, cex = 1.2)
#add line for 95% capture
abline(h = 95, col = "darkslategray4", lty=2, lwd = 3)
#legend
legend('bottomright', legend = c("Global", "Common", "Low Frequency","Rare", "95% diversity capture"),
lwd = 2, cex = 1.2,
col = c("red", "darkorange3", "coral", "deeppink4", "darkslategray4"),
lty = 1)
dev.off()
#add points
plot(QUAC_resampling_df[,2], col = "red", pch = 20, xlab = "Number of Individuals",
ylab = "Percent Diversity Capture", xlim = c(0,length(rownames(QUAC_resampling_df))), ylim = c(0,100), cex = 1.2,
main = "Percent Diversity Capture (All Alleles Included)")
points(QUAC_resampling_df[,4], col = "darkorange3", pch = 20, cex = 1.2)
points(QUAC_resampling_df[,5], col = "coral", pch = 20, cex = 1.2)
points(QUAC_resampling_df[,6], col = "deeppink4", pch = 20, cex = 1.2)
#add line for 95% capture
abline(h = 95, col = "darkslategray4", lty=2, lwd = 3)
#add legend
legend('bottomright', legend = c("Global", "Common", "Low Frequency","Rare", "95% diversity capture"),
lwd = 2, cex = 1.2,
col = c("red", "darkorange3", "coral", "deeppink4", "darkslategray4"),
lty = 1)
#write PDF with name
pdf("../Analyses/Results/Garden_Wild_Comparison/QUAC_resample_plot_woK_ndrop0.pdf", width = 10, height = 8)
#add points
plot(QUAC_resampling_df[,2], col = "red", pch = 20, xlab = "Number of Individuals",
ylab = "Percent Diversity Capture", xlim = c(0,length(rownames(QUAC_resampling_df))), ylim = c(0,100), cex = 1.2,
main = "Percent Diversity Capture (All Alleles Included)")
points(QUAC_resampling_df[,4], col = "darkorange3", pch = 20, cex = 1.2)
points(QUAC_resampling_df[,5], col = "coral", pch = 20, cex = 1.2)
points(QUAC_resampling_df[,6], col = "deeppink4", pch = 20, cex = 1.2)
#add line for 95% capture
abline(h = 95, col = "darkslategray4", lty=2, lwd = 3)
#add legend
legend('bottomright', legend = c("Global", "Common", "Low Frequency","Rare", "95% diversity capture"),
lwd = 2, cex = 1.2,
col = c("red", "darkorange3", "coral", "deeppink4", "darkslategray4"),
lty = 1)
dev.off()
#write PDF with name
pdf("../Analyses/Results/Garden_Wild_Comparison/QUAC_resample_plot_woK_ndrop0.pdf", width = 10, height = 8)
#add points
plot(QUAC_resampling_df[,2], col = "red", pch = 20, xlab = "Number of Individuals",
ylab = "Percent Diversity Capture", xlim = c(0,length(rownames(QUAC_resampling_df))), ylim = c(0,100), cex = 1.2,
main = "Percent Diversity Capture (All Alleles Included)")
points(QUAC_resampling_df[,4], col = "darkorange3", pch = 20, cex = 1.2)
points(QUAC_resampling_df[,5], col = "coral", pch = 20, cex = 1.2)
points(QUAC_resampling_df[,6], col = "deeppink4", pch = 20, cex = 1.2)
#add line for 95% capture
abline(h = 95, col = "darkslategray4", lty=2, lwd = 3)
#add legend
legend('bottomright', legend = c("Global", "Common", "Low Frequency","Rare", "95% diversity capture"),
lwd = 2, cex = 1.2,
col = c("red", "darkorange3", "coral", "deeppink4", "darkslategray4"),
lty = 1)
dev.off()
##relatedness reruns
QUAC_df <- read.csv("Data_Frames/QUAC_allpop_clean_df.csv")
View(QUAC_df)
?demerelate
library(Demerelate)
?demerelref
?Demerelate
View(QUAC_df)
#run demerelate
QUAC_rel_df <- Demerelate(QUAC_df[,-2], ref.pop = "Wild", value = "loiselle")
#run demerelate
QUAC_rel_df <- Demerelate(QUAC_df[,-2], object = T, ref.pop = "Wild", value = "loiselle")
QUAC_rel_df
#next, determine the names of halfsibs
halfsibs_names <- names(which(unlist(QUAC_rel_df$Empirical_Relatedness$Garden) > 0.125))
#now clean the front
halfsibs_clean_front <- gsub("^.*\\.","", halfsibs_names)
#clean the back for the list of halfsibs
halfsibs_clean_back <- gsub("^.*\\_","", halfsibs_clean_front)
#create list of halfsibs
halfsib_list <- unique(halfsibs_clean_back)
length(halfsib_list)
#next, determine the names of halfsibs
halfsibs_names <- names(which(unlist(QUAC_rel_df$Empirical_Relatedness$Wild) > 0.125))
#now clean the front
halfsibs_clean_front <- gsub("^.*\\.","", halfsibs_names)
#clean the back for the list of halfsibs
halfsibs_clean_back <- gsub("^.*\\_","", halfsibs_clean_front)
#create list of halfsibs
halfsib_list <- unique(halfsibs_clean_back)
halfsib_list
length(halfsib_list)
#run demerelate
QUAC_rel_df <- Demerelate(QUAC_df[,-2], object = T, value = "loiselle")
#next, determine the names of halfsibs
halfsibs_names <- names(which(unlist(QUAC_rel_df$Empirical_Relatedness$Wild) > 0.125))
#now clean the front
halfsibs_clean_front <- gsub("^.*\\.","", halfsibs_names)
#clean the back for the list of halfsibs
halfsibs_clean_back <- gsub("^.*\\_","", halfsibs_clean_front)
#create list of halfsibs
halfsib_list <- unique(halfsibs_clean_back)
length(halfsib_list)
QUAC_rel_df$`Thresholds for relatedness`
QUAC_rel_df$`Thresholds for relatedness`[1]
as.numeric(QUAC_rel_df$`Thresholds for relatedness`[1])
#next, determine the names of halfsibs
halfsibs_names <- names(which(unlist(QUAC_rel_df$Empirical_Relatedness$Wild) > as.numeric(QUAC_rel_df$`Thresholds for relatedness`[1])))
#now clean the front
halfsibs_clean_front <- gsub("^.*\\.","", halfsibs_names)
#clean the back for the list of halfsibs
halfsibs_clean_back <- gsub("^.*\\_","", halfsibs_clean_front)
#create list of halfsibs
halfsib_list <- unique(halfsibs_clean_back)
length(halfsib_list)
#run demerelate
QUAC_rel_df <- Demerelate(QUAC_df[,-3], object = T, value = "loiselle")
#next, determine the names of halfsibs
halfsibs_names <- names(which(unlist(QUAC_rel_df$Empirical_Relatedness$Sugar_Loaf) > 0.125))
#now clean the front
halfsibs_clean_front <- gsub("^.*\\.","", halfsibs_names)
#clean the back for the list of halfsibs
halfsibs_clean_back <- gsub("^.*\\_","", halfsibs_clean_front)
#create list of halfsibs
halfsib_list <- unique(halfsibs_clean_back)
length(halfsib_list)
QUAC_wild_df <- QUAC_df[QUAC_df$Garden_Wild == "Wild",]
#run demerelate
QUAC_rel_df <- Demerelate(QUAC_wild_df[,-3], object = T, ref.pop = "Sugar_Loaf", value = "loiselle")
QUAC_rel_df
mean(QUAC_rel_df$Empirical_Relatedness$Magazine)
mean(QUAC_rel_df$Empirical_Relatedness$Sugar_Loaf)
mean(QUAC_rel_df$Empirical_Relatedness$Pryor)
#run demerelate
QUAC_rel_df <- Demerelate(QUAC_df[,-2], object = T, ref.pop = "Garden", value = "loiselle")
head(QUAC_rel_df$Empirical_Relatedness$Wild)
QUAC_rel_df$`Thresholds for relatedness`
boxplot(QUAC_rel_df$Empirical_Relatedness$Wild)
mean(QUAC_rel_df$Empirical_Relatedness$Wild)
#next, determine the names of halfsibs
halfsibs_names <- names(which(unlist(QUAC_rel_df$Empirical_Relatedness$Wild) > 0.125))
#now clean the front
halfsibs_clean_front <- gsub("^.*\\.","", halfsibs_names)
#clean the back for the list of halfsibs
halfsibs_clean_back <- gsub("^.*\\_","", halfsibs_clean_front)
#create list of halfsibs
halfsib_list <- unique(halfsibs_clean_back)
length(halfsib_list)
QUAC_rel_wild_df <- Demerelate(QUAC_df[,-2], object = T, ref.pop = "Wild", value = "loiselle")
#run demerelate
QUAC_rel_wild_df <- Demerelate(QUAC_df[,-2], object = T, ref.pop = "Garden", value = "loiselle")
QUAC_rel_garden_df <- Demerelate(QUAC_df[,-2], object = T, ref.pop = "Wild", value = "loiselle")
boxplot(QUAC_rel_garden_df$Empirical_Relatedness$Garden, QUAC_rel_wild_df$Empirical_Relatedness$Wild)
t.test(QUAC_rel_garden_df$Empirical_Relatedness$Garden, QUAC_rel_wild_df$Empirical_Relatedness$Wild)
wilcox.test(QUAC_rel_garden_df$Empirical_Relatedness$Garden, QUAC_rel_wild_df$Empirical_Relatedness$Wild)
boxplot(QUAC_rel_garden_df$Empirical_Relatedness$Garden, QUAC_rel_wild_df$Empirical_Relatedness$Wild, labels = c("Garden", "Wild"))
length(QUAC_rel_df$Empirical_Relatedness)
length(QUAC_rel_df$Empirical_Relatedness$Garden)
38226/277
