#calculate list of individuals with a half sib in the sample
sp_deme_garden_rel_df <- as.data.frame(sp_garden_rel[[1]]$Empirical_Relatedness$Garden)
sp_deme_garden_rel_df$halfsib <- NA
sp_deme_garden_rel_df$fullsib <- NA
#calculate half-sib levels
sp_deme_garden_rel_df$halfsib <- sp_df2$Rel_Coeff > 0.125
head(sp_deme_garden_rel_df[,1])
head(sp_deme_garden_rel_df)
#calculate half-sib levels
sp_deme_garden_rel_df$halfsib <- sp_deme_garden_rel_df[,1] > 0.125
#calculate full sib levels
sp_deme_garden_rel_df$fullsib <- sp_deme_garden_rel_df[,1] > 0.25
#create a list of numbers of individuals
sp_deme_garden_halfsib_list[[rel]] <- length(unique(sp_deme_garden_rel_df[sp_deme_garden_rel_df$halfsib == TRUE,][,1]))
#calculate half-sib levels
sp_deme_garden_rel_df$halfsib <- sp_deme_garden_rel_df[,1] > 0.125
#calculate full sib levels
sp_deme_garden_rel_df$fullsib <- sp_deme_garden_rel_df[,1] > 0.25
length(unique(sp_deme_garden_rel_df[sp_deme_garden_rel_df$halfsib == TRUE,][,1]))
sp_deme_garden_rel_df$halfsib
rownames(sp_deme_garden_rel_df)
head(gsub("^.*\\_", "", rownames(sp_deme_garden_rel_df)))
#create a column for individual names
sp_deme_garden_rel_df$Ind1 <- gsub("^.*\\_", "", rownames(sp_deme_garden_rel_df))
View(sp_deme_garden_rel_df)
head(gsub("^.*\\.", "", rownames(sp_deme_garden_rel_df)))
head(gsub(".*_", "", rownames(sp_deme_garden_rel_df)))
head(gsub("^.*\\_","", rownames(sp_deme_garden_rel_df))))
head(gsub("^.*\\_","", rownames(sp_deme_garden_rel_df)))
head(gsub('_.*','', rownames(sp_deme_garden_rel_df)))
#create a column for individual names
sp_deme_garden_rel_df$Ind1 <- gsub("_.*","", rownames(sp_deme_garden_rel_df))
sp_deme_garden_rel_df$Ind2 <- gsub("^.*\\_","", rownames(sp_deme_garden_rel_df))
length(unique(sp_deme_garden_rel_df[sp_deme_garden_rel_df$halfsib == TRUE,]$Ind1))
length(unique(sp_deme_garden_rel_df[sp_deme_garden_rel_df$fullsib == TRUE,]$Ind1))
205/277
#number of individuals for each population
pop_numbers <- c(277, 277, 172, 172, 382, 382, 751, 751)
#loop to calculate demerelate halfsibs and full sibs in gardens
for(g in 1:length(sp_garden_rel)){
#calculate list of individuals with a half sib in the sample
sp_deme_garden_rel_df <- as.data.frame(sp_garden_rel[[g]]$Empirical_Relatedness$Garden)
sp_deme_garden_rel_df$halfsib <- NA
sp_deme_garden_rel_df$fullsib <- NA
#calculate half-sib levels
sp_deme_garden_rel_df$halfsib <- sp_deme_garden_rel_df[,1] > 0.125
#calculate full sib levels
sp_deme_garden_rel_df$fullsib <- sp_deme_garden_rel_df[,1] > 0.25
#create a column for individual names
sp_deme_garden_rel_df$Ind1 <- gsub("_.*","", rownames(sp_deme_garden_rel_df))
sp_deme_garden_rel_df$Ind2 <- gsub("^.*\\_","", rownames(sp_deme_garden_rel_df))
#create a list of numbers of individuals with a half or full sib in the sample
sp_deme_garden_halfsib_list[[rel]] <- length(unique(sp_deme_garden_rel_df[sp_deme_garden_rel_df$halfsib == TRUE,]$Ind1))
sp_deme_garden_fullsib_list[[rel]] <- length(unique(sp_deme_garden_rel_df[sp_deme_garden_rel_df$fullsib == TRUE,]$Ind1))
#create a list of the percent of individuals with a half or full sib in the sample
sp_deme_garden_halfsib_list[[rel]] <- length(unique(sp_deme_garden_rel_df[sp_deme_garden_rel_df$halfsib == TRUE,]$Ind1))
sp_deme_garden_fullsib_list[[rel]] <- length(unique(sp_deme_garden_rel_df[sp_deme_garden_rel_df$fullsib == TRUE,]$Ind1))
}
#loop to calculate demerelate halfsibs and full sibs in gardens
for(g in 1:length(sp_garden_rel)){
#calculate list of individuals with a half sib in the sample
sp_deme_garden_rel_df <- as.data.frame(sp_garden_rel[[g]]$Empirical_Relatedness$Garden)
sp_deme_garden_rel_df$halfsib <- NA
sp_deme_garden_rel_df$fullsib <- NA
#calculate half-sib levels
sp_deme_garden_rel_df$halfsib <- sp_deme_garden_rel_df[,1] > 0.125
#calculate full sib levels
sp_deme_garden_rel_df$fullsib <- sp_deme_garden_rel_df[,1] > 0.25
#create a column for individual names
sp_deme_garden_rel_df$Ind1 <- gsub("_.*","", rownames(sp_deme_garden_rel_df))
sp_deme_garden_rel_df$Ind2 <- gsub("^.*\\_","", rownames(sp_deme_garden_rel_df))
#create a list of numbers of individuals with a half or full sib in the sample
sp_deme_garden_halfsib_list[[g]] <- length(unique(sp_deme_garden_rel_df[sp_deme_garden_rel_df$halfsib == TRUE,]$Ind1))
sp_deme_garden_fullsib_list[[g]] <- length(unique(sp_deme_garden_rel_df[sp_deme_garden_rel_df$fullsib == TRUE,]$Ind1))
#create a list of the percent of individuals with a half or full sib in the sample
sp_deme_garden_halfsib_per_list[[g]] <- (length(unique(sp_deme_garden_rel_df[sp_deme_garden_rel_df$halfsib == TRUE,]$Ind1))/pop_numbers[[g]])*100
sp_deme_garden_fullsib_per_list[[g]] <- (length(unique(sp_deme_garden_rel_df[sp_deme_garden_rel_df$fullsib == TRUE,]$Ind1))/pop_numbers[[g]])*100
}
#create lists
sp_deme_garden_halfsib_list <- list()
sp_deme_garden_fullsib_list <- list()
sp_deme_garden_halfsib_per_list <- list()
sp_deme_garden_fullsib_per_list <- list()
#loop to calculate demerelate halfsibs and full sibs in gardens
for(g in 1:length(sp_garden_rel)){
#calculate list of individuals with a half sib in the sample
sp_deme_garden_rel_df <- as.data.frame(sp_garden_rel[[g]]$Empirical_Relatedness$Garden)
sp_deme_garden_rel_df$halfsib <- NA
sp_deme_garden_rel_df$fullsib <- NA
#calculate half-sib levels
sp_deme_garden_rel_df$halfsib <- sp_deme_garden_rel_df[,1] > 0.125
#calculate full sib levels
sp_deme_garden_rel_df$fullsib <- sp_deme_garden_rel_df[,1] > 0.25
#create a column for individual names
sp_deme_garden_rel_df$Ind1 <- gsub("_.*","", rownames(sp_deme_garden_rel_df))
sp_deme_garden_rel_df$Ind2 <- gsub("^.*\\_","", rownames(sp_deme_garden_rel_df))
#create a list of numbers of individuals with a half or full sib in the sample
sp_deme_garden_halfsib_list[[g]] <- length(unique(sp_deme_garden_rel_df[sp_deme_garden_rel_df$halfsib == TRUE,]$Ind1))
sp_deme_garden_fullsib_list[[g]] <- length(unique(sp_deme_garden_rel_df[sp_deme_garden_rel_df$fullsib == TRUE,]$Ind1))
#create a list of the percent of individuals with a half or full sib in the sample
sp_deme_garden_halfsib_per_list[[g]] <- (length(unique(sp_deme_garden_rel_df[sp_deme_garden_rel_df$halfsib == TRUE,]$Ind1))/pop_numbers[[g]])*100
sp_deme_garden_fullsib_per_list[[g]] <- (length(unique(sp_deme_garden_rel_df[sp_deme_garden_rel_df$fullsib == TRUE,]$Ind1))/pop_numbers[[g]])*100
}
sp_deme_garden_halfsib_list
sp_deme_garden_fullsib_list
sp_deme_garden_halfsib_per_list
rel_garden_df_list[[1]]
unique(rel_garden_df_list[[1]]$Ind)
length(rel_garden_df_list[[1]][rel_garden_df_list[[1]]$Garden_Wild == "Garden",][,1])
#loop to calculate demerelate halfsibs and full sibs in gardens
for(g in 1:length(sp_garden_rel)){
#calculate list of individuals with a half sib in the sample
sp_deme_garden_rel_df <- as.data.frame(sp_garden_rel[[g]]$Empirical_Relatedness$Garden)
sp_deme_garden_rel_df$halfsib <- NA
sp_deme_garden_rel_df$fullsib <- NA
#calculate half-sib levels
sp_deme_garden_rel_df$halfsib <- sp_deme_garden_rel_df[,1] > 0.125
#calculate full sib levels
sp_deme_garden_rel_df$fullsib <- sp_deme_garden_rel_df[,1] > 0.25
#create a column for individual names
sp_deme_garden_rel_df$Ind1 <- gsub("_.*","", rownames(sp_deme_garden_rel_df))
sp_deme_garden_rel_df$Ind2 <- gsub("^.*\\_","", rownames(sp_deme_garden_rel_df))
#create a list of numbers of individuals with a half or full sib in the sample
sp_deme_garden_halfsib_list[[g]] <- length(unique(sp_deme_garden_rel_df[sp_deme_garden_rel_df$halfsib == TRUE,]$Ind1))
sp_deme_garden_fullsib_list[[g]] <- length(unique(sp_deme_garden_rel_df[sp_deme_garden_rel_df$fullsib == TRUE,]$Ind1))
#create a list of the percent of individuals with a half or full sib in the sample
sp_deme_garden_halfsib_per_list[[g]] <- (length(unique(sp_deme_garden_rel_df[sp_deme_garden_rel_df$halfsib == TRUE,]$Ind1))/length(rel_garden_df_list[[1]][rel_garden_df_list[[1]]$Garden_Wild == "Garden",][,1]))*100
sp_deme_garden_fullsib_per_list[[g]] <- (length(unique(sp_deme_garden_rel_df[sp_deme_garden_rel_df$fullsib == TRUE,]$Ind1))/length(rel_garden_df_list[[1]][rel_garden_df_list[[1]]$Garden_Wild == "Garden",][,1]))*100
}
sp_deme_garden_fullsib_per_list
#loop to calculate demerelate halfsibs and full sibs in gardens
for(g in 1:length(sp_garden_rel)){
#calculate list of individuals with a half sib in the sample
sp_deme_garden_rel_df <- as.data.frame(sp_garden_rel[[g]]$Empirical_Relatedness$Garden)
sp_deme_garden_rel_df$halfsib <- NA
sp_deme_garden_rel_df$fullsib <- NA
#calculate half-sib levels
sp_deme_garden_rel_df$halfsib <- sp_deme_garden_rel_df[,1] > 0.125
#calculate full sib levels
sp_deme_garden_rel_df$fullsib <- sp_deme_garden_rel_df[,1] > 0.25
#create a column for individual names
sp_deme_garden_rel_df$Ind1 <- gsub("_.*","", rownames(sp_deme_garden_rel_df))
sp_deme_garden_rel_df$Ind2 <- gsub("^.*\\_","", rownames(sp_deme_garden_rel_df))
#create a list of numbers of individuals with a half or full sib in the sample
sp_deme_garden_halfsib_list[[g]] <- length(unique(sp_deme_garden_rel_df[sp_deme_garden_rel_df$halfsib == TRUE,]$Ind1))
sp_deme_garden_fullsib_list[[g]] <- length(unique(sp_deme_garden_rel_df[sp_deme_garden_rel_df$fullsib == TRUE,]$Ind1))
#create a list of the percent of individuals with a half or full sib in the sample
sp_deme_garden_halfsib_per_list[[g]] <- (length(unique(sp_deme_garden_rel_df[sp_deme_garden_rel_df$halfsib == TRUE,]$Ind1))/length(rel_garden_df_list[[g]][rel_garden_df_list[[g]]$Garden_Wild == "Garden",][,1]))*100
sp_deme_garden_fullsib_per_list[[g]] <- (length(unique(sp_deme_garden_rel_df[sp_deme_garden_rel_df$fullsib == TRUE,]$Ind1))/length(rel_garden_df_list[[g]][rel_garden_df_list[[g]]$Garden_Wild == "Garden",][,1]))*100
}
sp_deme_garden_halfsib_per_list
sp_deme_garden_fullsib_per_list
##code for reporting these stats
#create output matrix
sp_garden_deme_output_df <- matrix(nrow = 2, ncol = length(sp_deme_garden_halfsib_list))
#loop to make the data frame
for(sp in 1:length(sp_halfsib_percent_list)){
#half sibling row with % half sibs and # of individuals with a half sib
sp_garden_deme_output_df[1,sp] <- paste0(signif(as.numeric(sp_deme_garden_halfsib_per_list[[sp]]), 3), "% (", sp_deme_garden_halfsib_list[[sp]], ")")
#full sib percent and number
sp_garden_deme_output_df[2,sp] <- paste0(signif(as.numeric(sp_deme_garden_halfsib_per_list[[sp]]), 3), "% (", sp_deme_garden_fullsib_list[[sp]], ")")
}
##code for reporting these stats
#create output matrix
sp_garden_deme_output_df <- matrix(nrow = 2, ncol = length(sp_deme_garden_halfsib_list))
#loop to make the data frame
for(sp in 1:length(sp_deme_garden_halfsib_per_list)){
#half sibling row with % half sibs and # of individuals with a half sib
sp_garden_deme_output_df[1,sp] <- paste0(signif(as.numeric(sp_deme_garden_halfsib_per_list[[sp]]), 3), "% (", sp_deme_garden_halfsib_list[[sp]], ")")
#full sib percent and number
sp_garden_deme_output_df[2,sp] <- paste0(signif(as.numeric(sp_deme_garden_halfsib_per_list[[sp]]), 3), "% (", sp_deme_garden_fullsib_list[[sp]], ")")
}
sp_garden_deme_output_df
colnames(sp_garden_deme_output_df) <- scenario_list
#write out data frame
write.csv(sp_garden_deme_output_df, "../Analyses/Results/sp_garden_deme_output_df.csv")
#write out data frame
write.csv(sp_garden_deme_output_df, "../Analyses/Results/Relatedness/sp_garden_deme_output_df.csv")
sp_wild_rel[[1]]
head(sp_wild_rel[[1]])
head(sp_wild_rel[[1]]$Empirical_Relatedness)
head(sp_wild_rel[[1]]$Empirical_Relatedness$Kessler)
#calculate list of individuals with a half sib in the sample
sp_deme_wild_rel_df <- as.data.frame(sp_wild_rel[[1]]$Empirical_Relatedness)
as.numeric(sp_wild_rel[[1]]$Empirical_Relatedness)
as.character(sp_wild_rel[[1]]$Empirical_Relatedness)
#calculate list of individuals with a half sib in the sample
sp_deme_wild_rel_df <- as.data.frame(sp_wild_rel[[1]]$Empirical_Relatedness)
sp_wild_rel[[1]]$Empirical_Relatedness$Kessler
length(sp_wild_rel[[1]]$Empirical_Relatedness)
#create list to store initial data frames
sp_deme_wild_rel_df <- list()
sp_wild_rel[[1]]
length(sp_wild_rel[[1]]$Empirical_Relatedness)
#create a variable for the # of wild pops
sp_wild_pop_num <- length(sp_wild_rel[[1]]$Empirical_Relatedness)
sp_wild_pop_num
#create list to store initial data frames
sp_deme_wild_rel_df <- list(list(), list(), list(), list())
as.data.frame(sp_wild_rel[[1]]$Empirical_Relatedness[1])
as.data.frame(sp_wild_rel[[1]]$Empirical_Relatedness[2])
#save relatedness results as data frames
for(rel in 1:sp_wild_pop_num){
sp_deme_wild_rel_df[[rel]] <- as.data.frame(sp_wild_rel[[1]]$Empirical_Relatedness[rel])
}
sp_deme_wild_rel_df[[1]]
sp_deme_wild_rel_df[[2]]
rbind(sp_deme_wild_rel_df)
lapply(sp_deme_wild_rel_df, rbind)
sp_deme_allwildpop_df <- lapply(sp_deme_wild_rel_df, rbind)
#create list to store initial data frames
sp_deme_wild_rel_df <- list()
sp_deme_allwildpop_df <- lapply(sp_deme_wild_rel_df, rbind)
#save relatedness results as data frames
for(rel in 1:sp_wild_pop_num){
sp_deme_wild_rel_df[[rel]] <- as.data.frame(sp_deme_wild_df$Empirical_Relatedness[rel])
}
#create data frame
sp_deme_wild_df <- sp_wild_rel[[w]]
#create a variable for the # of wild pops
sp_wild_pop_num <- length(sp_wild_rel[[1]]$Empirical_Relatedness)
#save relatedness results as data frames
for(rel in 1:sp_wild_pop_num){
sp_deme_wild_rel_df[[rel]] <- as.data.frame(sp_deme_wild_df$Empirical_Relatedness[rel])
}
sp_deme_wild_rel_df
#create data frame
sp_deme_wild_df <- sp_wild_rel[[1]]
#create a variable for the # of wild pops
sp_wild_pop_num <- length(sp_wild_rel[[1]]$Empirical_Relatedness)
#save relatedness results as data frames
for(rel in 1:sp_wild_pop_num){
sp_deme_wild_rel_df[[rel]] <- as.data.frame(sp_deme_wild_df$Empirical_Relatedness[rel])
}
sp_deme_allwildpop_df <- lapply(sp_deme_wild_rel_df, rbind)
View(sp_deme_allwildpop_df)
lapply(sp_deme_wild_rel_df, rbind)
as.data.frame(lapply(sp_deme_wild_rel_df, rbind))
sp_deme_allwildpop_df <- rbind(sp_deme_wild_rel_df[[1]], sp_deme_wild_rel_df[[2]],
sp_deme_wild_rel_df[[3]], sp_deme_wild_rel_df[[4]], sp_deme_wild_rel_df[[5]])
#save relatedness results as data frames
for(rel in 1:sp_wild_pop_num){
sp_deme_wild_rel_df[[rel]] <- as.data.frame(sp_deme_wild_df$Empirical_Relatedness[rel])
#
colnames(sp_deme_wild_rel_df[[rel]]) <- c("Ind", "rel_Coeff")
}
#save relatedness results as data frames
for(rel in 1:sp_wild_pop_num){
sp_deme_wild_rel_df[[rel]] <- as.data.frame(sp_deme_wild_df$Empirical_Relatedness[rel])
#
colnames(sp_deme_wild_rel_df[[rel]]) <- c("Rel_Coeff")
}
sp_deme_allwildpop_df <- rbind(sp_deme_wild_rel_df[[1]], sp_deme_wild_rel_df[[2]],
sp_deme_wild_rel_df[[3]], sp_deme_wild_rel_df[[4]], sp_deme_wild_rel_df[[5]])
sp_deme_allwildpop_df <- lapply(sp_deme_wild_rel_df, rbind)
View(sp_deme_allwildpop_df)
sp_deme_allwildpop_df <- mapply(data.frame, A = sp_deme_wild_rel_df, SIMPLIFY = FALSE)
View(sp_deme_allwildpop_df)
data.frame(sp_deme_wild_rel_df)
cbind(sp_deme_wild_rel_df)
rbind(sp_deme_wild_rel_df[[1]], sp_deme_wild_rel_df[[2]])
?do.call
do.call(rbind,sp_deme_wild_rel_df)
#create data frame
sp_deme_wild_df <- sp_wild_rel[[1]]
#create a variable for the # of wild pops
sp_wild_pop_num <- length(sp_wild_rel[[1]]$Empirical_Relatedness)
#save relatedness results as data frames
for(rel in 1:sp_wild_pop_num){
sp_deme_wild_rel_df[[rel]] <- as.data.frame(sp_deme_wild_df$Empirical_Relatedness[rel])
#
colnames(sp_deme_wild_rel_df[[rel]]) <- c("Rel_Coeff")
}
sp_deme_allwildpop_df <- do.call(rbind,sp_deme_wild_rel_df)
View(sp_deme_allwildpop_df)
#create column for storing relatedness info
sp_deme_allwildpop_df$halfsib <- NA
sp_deme_allwildpop_df$fullsib <- NA
#mark what are not halfsibs
sp_deme_allwildpop_df$halfsib <- sp_deme_allwildpop_df[,1] > 0.125
#calculate full sib levels
sp_deme_allwildpop_df$fullsib <- sp_deme_allwildpop_df[,1] > 0.25
#create a column for individual names
sp_deme_allwildpop_df$Ind1 <- gsub("_.*","", rownames(sp_deme_allwildpop_df))
sp_deme_allwildpop_df$Ind2 <- gsub("^.*\\_","", rownames(sp_deme_allwildpop_df))
length(unique(sp_deme_allwildpop_df$Ind1))
sp_wild_pop_num
length(unique(sp_deme_allwildpop_df$Ind2))
length(unique(sp_deme_wild_df$Empirical_Relatedness))
length(unique(sp_deme_wild_df$Empirical_Relatedness$Kessler))
length(unique(sp_deme_allwildpop_df[sp_deme_allwildpop_df$halfsib == TRUE,]$Ind1))
149/172
length(unique(sp_deme_garden_rel_df$Ind1))
length(unique(sp_deme_garden_rel_df$Ind2))
#calculate list of individuals with a half sib in the sample
sp_deme_garden_rel_df <- as.data.frame(sp_garden_rel[[1]]$Empirical_Relatedness$Garden)
sp_deme_garden_rel_df$halfsib <- NA
sp_deme_garden_rel_df$fullsib <- NA
#calculate half-sib levels
sp_deme_garden_rel_df$halfsib <- sp_deme_garden_rel_df[,1] > 0.125
#calculate full sib levels
sp_deme_garden_rel_df$fullsib <- sp_deme_garden_rel_df[,1] > 0.25
#create a column for individual names
sp_deme_garden_rel_df$Ind1 <- gsub("_.*","", rownames(sp_deme_garden_rel_df))
sp_deme_garden_rel_df$Ind2 <- gsub("^.*\\_","", rownames(sp_deme_garden_rel_df))
#create a list of numbers of individuals with a half or full sib in the sample
sp_deme_garden_halfsib_list[[g]] <- length(unique(sp_deme_garden_rel_df[sp_deme_garden_rel_df$halfsib == TRUE,]$Ind1))
sp_deme_garden_fullsib_list[[g]] <- length(unique(sp_deme_garden_rel_df[sp_deme_garden_rel_df$fullsib == TRUE,]$Ind1))
length(unique(sp_deme_garden_rel_df$Ind1))
head(rel_wild_df_list[[1]])
length(rel_wild_df_list[[1]][,1])
#loop to calculate demerelate half and full sibs in wild pops
for(w in 1:length(sp_wild_rel)){
#create data frame
sp_deme_wild_df <- sp_wild_rel[[w]]
#create a variable for the # of wild pops
sp_wild_pop_num <- length(sp_wild_rel[[w]]$Empirical_Relatedness)
#save relatedness results as data frames
for(rel in 1:sp_wild_pop_num){
sp_deme_wild_rel_df[[rel]] <- as.data.frame(sp_deme_wild_df$Empirical_Relatedness[rel])
#name column to allow for rbind to work
colnames(sp_deme_wild_rel_df[[rel]]) <- c("Rel_Coeff")
}
#bind data frames together
sp_deme_allwildpop_df <- do.call(rbind,sp_deme_wild_rel_df)
#create column for storing relatedness info
sp_deme_allwildpop_df$halfsib <- NA
sp_deme_allwildpop_df$fullsib <- NA
#mark what are not halfsibs
sp_deme_allwildpop_df$halfsib <- sp_deme_allwildpop_df[,1] > 0.125
#mark full sibs
sp_deme_allwildpop_df$fullsib <- sp_deme_allwildpop_df[,1] > 0.25
#create a column for individual names
sp_deme_allwildpop_df$Ind1 <- gsub("_.*","", rownames(sp_deme_allwildpop_df))
sp_deme_allwildpop_df$Ind2 <- gsub("^.*\\_","", rownames(sp_deme_allwildpop_df))
#create a list of numbers of individuals with a half or full sib in the sample
sp_deme_wild_halfsib_list[[w]] <- length(unique(sp_deme_allwildpop_df[sp_deme_allwildpop_df$halfsib == TRUE,]$Ind1))
sp_deme_wild_fullsib_list[[w]] <- length(unique(sp_deme_allwildpop_df[sp_deme_allwildpop_df$fullsib == TRUE,]$Ind1))
#create a list of the percent of individuals with a half or full sib in the sample
sp_deme_wild_halfsib_per_list[[w]] <- (length(unique(sp_deme_allwildpop_df[sp_deme_allwildpop_df$halfsib == TRUE,]$Ind1))/length(rel_wild_df_list[[w]][,1]))*100
sp_deme_wild_fullsib_per_list[[w]] <- (length(unique(sp_deme_allwildpop_df[sp_deme_allwildpop_df$fullsib == TRUE,]$Ind1))/length(rel_wild_df_list[[w]][,1]))*100
}
#create lists
sp_deme_wild_rel_df <- list()
sp_deme_wild_halfsib_list <- list()
sp_deme_wild_fullsib_list <- list()
sp_deme_wild_halfsib_per_list <- list()
sp_deme_wild_fullsib_per_list <- list()
#loop to calculate demerelate half and full sibs in wild pops
for(w in 1:length(sp_wild_rel)){
#create data frame
sp_deme_wild_df <- sp_wild_rel[[w]]
#create a variable for the # of wild pops
sp_wild_pop_num <- length(sp_wild_rel[[w]]$Empirical_Relatedness)
#save relatedness results as data frames
for(rel in 1:sp_wild_pop_num){
sp_deme_wild_rel_df[[rel]] <- as.data.frame(sp_deme_wild_df$Empirical_Relatedness[rel])
#name column to allow for rbind to work
colnames(sp_deme_wild_rel_df[[rel]]) <- c("Rel_Coeff")
}
#bind data frames together
sp_deme_allwildpop_df <- do.call(rbind,sp_deme_wild_rel_df)
#create column for storing relatedness info
sp_deme_allwildpop_df$halfsib <- NA
sp_deme_allwildpop_df$fullsib <- NA
#mark what are not halfsibs
sp_deme_allwildpop_df$halfsib <- sp_deme_allwildpop_df[,1] > 0.125
#mark full sibs
sp_deme_allwildpop_df$fullsib <- sp_deme_allwildpop_df[,1] > 0.25
#create a column for individual names
sp_deme_allwildpop_df$Ind1 <- gsub("_.*","", rownames(sp_deme_allwildpop_df))
sp_deme_allwildpop_df$Ind2 <- gsub("^.*\\_","", rownames(sp_deme_allwildpop_df))
#create a list of numbers of individuals with a half or full sib in the sample
sp_deme_wild_halfsib_list[[w]] <- length(unique(sp_deme_allwildpop_df[sp_deme_allwildpop_df$halfsib == TRUE,]$Ind1))
sp_deme_wild_fullsib_list[[w]] <- length(unique(sp_deme_allwildpop_df[sp_deme_allwildpop_df$fullsib == TRUE,]$Ind1))
#create a list of the percent of individuals with a half or full sib in the sample
sp_deme_wild_halfsib_per_list[[w]] <- (length(unique(sp_deme_allwildpop_df[sp_deme_allwildpop_df$halfsib == TRUE,]$Ind1))/length(rel_wild_df_list[[w]][,1]))*100
sp_deme_wild_fullsib_per_list[[w]] <- (length(unique(sp_deme_allwildpop_df[sp_deme_allwildpop_df$fullsib == TRUE,]$Ind1))/length(rel_wild_df_list[[w]][,1]))*100
}
sp_deme_wild_halfsib_per_list
sp_deme_wild_fullsib_per_list
sp_deme_allwildpop_df
sp_deme_wild_halfsib_list
sp_deme_wild_fullsib_list
##code for reporting these stats
#create output matrix
sp_wild_deme_output_df <- matrix(nrow = 2, ncol = length(sp_deme_wild_halfsib_list))
#loop to make the data frame
for(sp in 1:length(sp_deme_wild_halfsib_list)){
#half sibling row with % half sibs and # of individuals with a half sib
sp_wild_deme_output_df[1,sp] <- paste0(signif(as.numeric(sp_deme_wild_halfsib_per_list[[sp]]), 3), "% (", sp_deme_wild_halfsib_list[[sp]], ")")
#full sib percent and number
sp_wild_deme_output_df[2,sp] <- paste0(signif(as.numeric(sp_deme_wild_fullsib_per_list[[sp]]), 3), "% (", sp_deme_wild_fullsib_list[[sp]], ")")
}
sp_wild_deme_output_df
#name rows and columns
rownames(sp_garden_deme_output_df) <- c("half_sibs","full_sibs")
colnames(sp_garden_deme_output_df) <- scenario_list
#write out data frame
write.csv(sp_garden_deme_output_df, "../Analyses/Results/Relatedness/sp_garden_deme_output_df.csv")
#name rows and columns
rownames(sp_wild_deme_output_df) <- c("half_sibs", "full_sibs")
colnames(sp_wild_deme_output_df) <- scenario_list
#write out results
write.csv(sp_wild_deme_output_df, "../Analyses/Results/Relatedness/sp_wild_deme_output_df.csv")
#create list to stores results
sp_halfsib_list <- list()
sp_fullsib_list <- list()
sp_halfsib_percent_list <- list()
sp_fullsib_percent_list <- list()
#now use a loop to output the number of related ind
for(rel in 1:length(spagedi_df)){
#first, read in CSV files
sp_df <- read.csv(paste0("../Analyses/Results/Relatedness/",spagedi_df[[rel]]))
#next, for each data frame, remove the row with the text "inbreeding coef"
#this is a line that compares each ind to itself
sp_df2 <- sp_df[!(sp_df$Dist == "inbreeding coef"),]
##add columns for sibling levels
#half-sib
sp_df2$half_sib <- NA
sp_df2$full_sib <- NA
#calculate half-sib levels
sp_df2$halfsib <- sp_df2$Rel_Coeff > 0.125
#calculate full sib levels
sp_df2$fullsib <- sp_df2$Rel_Coeff > 0.25
#create a list of the percent of individuals with a half or full sib in the sample
sp_halfsib_list[[rel]] <- length(unique(sp_df2[sp_df2$halfsib == TRUE,][,1]))
sp_fullsib_list[[rel]] <- length(unique(sp_df2[sp_df2$fullsib == TRUE,][,1]))
#create a list of the percent of individuals with a half or full sib in the sample
sp_halfsib_percent_list[[rel]] <- (length(unique(sp_df2[sp_df2$halfsib == TRUE,][,1]))/pop_numbers[[rel]])*100
sp_fullsib_percent_list[[rel]] <- (length(unique(sp_df2[sp_df2$fullsib == TRUE,][,1]))/pop_numbers[[rel]])*100
}
##code for reporting these stats
#create output matrix
sp_spagedi_output_df <- matrix(nrow = 2, ncol = length(sp_halfsib_list))
#loop to make the data frame
for(sp in 1:length(sp_halfsib_percent_list)){
#half sibling row with % half sibs and # of individuals with a half sib
sp_spagedi_output_df[1,sp] <- paste0(signif(as.numeric(sp_halfsib_percent_list[[sp]]), 3), "% (", sp_halfsib_list[[sp]], ")")
#full sib percent and number
sp_spagedi_output_df[2,sp] <- paste0(signif(as.numeric(sp_fullsib_percent_list[[sp]]), 3), "% (", sp_fullsib_list[[sp]], ")")
}
#name rows and columns
colnames(sp_spagedi_output_df) <- c("QUAC_garden_sample", "QUAC_garden_whole", "QUAC_wild_sample",
"QUAC_wild_whole", "ZAIN_garden_sample", "ZAIN_garden_whole",
"ZAIN_wild_sample", "ZAIN_wild_whole")
rownames(sp_spagedi_output_df) <- c("half_sibs","full_sibs")
#write out data file
write.csv(sp_spagedi_output_df, "../Analyses/Results/Relatedness/sp_spagedi_output_df.csv")
sp_deme_garden_fullsib_list
205/277
length(rel_garden_df_list[[g]][rel_garden_df_list[[g]]$Garden_Wild == "Garden",][,1]))
length(rel_garden_df_list[[1]][rel_garden_df_list[[1]]$Garden_Wild == "Garden",][,1])
#code for reporting these stats
#create output matrix
sp_garden_deme_output_df <- matrix(nrow = 2, ncol = length(sp_deme_garden_halfsib_list))
#loop to make the data frame
for(sp in 1:length(sp_deme_garden_halfsib_per_list)){
#half sibling row with % half sibs and # of individuals with a half sib
sp_garden_deme_output_df[1,sp] <- paste0(signif(as.numeric(sp_deme_garden_halfsib_per_list[[sp]]), 3), "% (", sp_deme_garden_halfsib_list[[sp]], ")")
#full sib percent and number
sp_garden_deme_output_df[2,sp] <- paste0(signif(as.numeric(sp_deme_garden_fullsib_per_list[[sp]]), 3), "% (", sp_deme_garden_fullsib_list[[sp]], ")")
}
#name rows and columns
rownames(sp_garden_deme_output_df) <- c("half_sibs","full_sibs")
colnames(sp_garden_deme_output_df) <- scenario_list
#write out data frame
write.csv(sp_garden_deme_output_df, "../Analyses/Results/Relatedness/sp_garden_deme_output_df.csv")
length(sp_deme_garden_halfsib_per_list)
sp_deme_garden_halfsib_per_list
sp_deme_garden_fullsib_list
sp_garden_rel[[4]]
head(sp_garden_rel[[4]]$Empirical_Relatedness$Garden)
head(sp_deme_garden_rel_df)
#loop to calculate demerelate halfsibs and full sibs in gardens
for(g in 1:length(sp_garden_rel)){
#calculate list of individuals with a half sib in the sample
sp_deme_garden_rel_df <- as.data.frame(sp_garden_rel[[g]]$Empirical_Relatedness$Garden)
sp_deme_garden_rel_df$halfsib <- NA
sp_deme_garden_rel_df$fullsib <- NA
#calculate half-sib levels
sp_deme_garden_rel_df$halfsib <- sp_deme_garden_rel_df[,1] > 0.125
#calculate full sib levels
sp_deme_garden_rel_df$fullsib <- sp_deme_garden_rel_df[,1] > 0.25
#create a column for individual names
sp_deme_garden_rel_df$Ind1 <- gsub("_.*","", rownames(sp_deme_garden_rel_df))
sp_deme_garden_rel_df$Ind2 <- gsub("^.*\\_","", rownames(sp_deme_garden_rel_df))
#create a list of numbers of individuals with a half or full sib in the sample
sp_deme_garden_halfsib_list[[g]] <- length(unique(sp_deme_garden_rel_df[sp_deme_garden_rel_df$halfsib == TRUE,]$Ind1))
sp_deme_garden_fullsib_list[[g]] <- length(unique(sp_deme_garden_rel_df[sp_deme_garden_rel_df$fullsib == TRUE,]$Ind1))
#create a list of the percent of individuals with a half or full sib in the sample
sp_deme_garden_halfsib_per_list[[g]] <- (length(unique(sp_deme_garden_rel_df[sp_deme_garden_rel_df$halfsib == TRUE,]$Ind1))/length(rel_garden_df_list[[g]][rel_garden_df_list[[g]]$Garden_Wild == "Garden",][,1]))*100
sp_deme_garden_fullsib_per_list[[g]] <- (length(unique(sp_deme_garden_rel_df[sp_deme_garden_rel_df$fullsib == TRUE,]$Ind1))/length(rel_garden_df_list[[g]][rel_garden_df_list[[g]]$Garden_Wild == "Garden",][,1]))*100
}
sp_deme_garden_fullsib_list
sp_deme_garden_fullsib_per_list
#code for reporting these stats
#create output matrix
sp_garden_deme_output_df <- matrix(nrow = 2, ncol = length(sp_deme_garden_halfsib_list))
#loop to make the data frame
for(sp in 1:length(sp_deme_garden_halfsib_per_list)){
#half sibling row with % half sibs and # of individuals with a half sib
sp_garden_deme_output_df[1,sp] <- paste0(signif(as.numeric(sp_deme_garden_halfsib_per_list[[sp]]), 3), "% (", sp_deme_garden_halfsib_list[[sp]], ")")
#full sib percent and number
sp_garden_deme_output_df[2,sp] <- paste0(signif(as.numeric(sp_deme_garden_fullsib_per_list[[sp]]), 3), "% (", sp_deme_garden_fullsib_list[[sp]], ")")
}
sp_garden_deme_output_df
#name rows and columns
rownames(sp_garden_deme_output_df) <- c("half_sibs","full_sibs")
colnames(sp_garden_deme_output_df) <- scenario_list
#write out data frame
write.csv(sp_garden_deme_output_df, "../Analyses/Results/Relatedness/sp_garden_deme_output_df.csv")
