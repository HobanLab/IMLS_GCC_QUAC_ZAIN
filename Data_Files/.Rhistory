#######################
#     Load files      #
#######################
##set working directory to load in data files
setwd("../../Data_Files")
#df files
sp_df_list <- list.files(path = "Data_Frames", pattern = "_clean_df.csv")
#df files
sp_df_list <- list.files(path = "Data_Frames", pattern = "_clean_df.csv")
#load in function to calculate allele frequency categories
source("../Analyses/RScripts/Fa_sample_funcs.R")
#create functions to run code
colMax <- function(data) sapply(data, max, na.rm = TRUE)
#list of scenarios
species_list <- c("QUAC_wK", "QUAC_woK", "ZAIN_og", "ZAIN_rebinned")
sp_df_list
#df files
sp_df_list <- list.files(path = "Data_Frames", pattern = "_clean_df.csv")
sp_df_list
#list of scenarios
species_list <- c("QUAC_wK", "QUAC_wk_ESTSSR", "QUAC_wk_gSSR",
"QUAC_woK", "QUAC_woK_ESTSSR", "QUAC_woK_gSSR",
"ZAIN_og", "ZAIN_rebinned")
#genind objects
sp_genind_list <- list.files(path = "Adegenet_Files", pattern = "_clean.gen")
sp_genind_list
#list of scenarios
species_list <- c("QUAC_wK", "QUAC_wk_ESTSSR", "QUAC_wk_gSSR",
"QUAC_woK", "QUAC_woK_ESTSSR", "QUAC_woK_gSSR",
"ZAIN_og", "ZAIN_rebinned")
#################################################
#     Comparing wild and garden populations     #
#################################################
#comparing wild and garden individuals
allrich_garden_wild_df <- as.data.frame(matrix(nrow = 3, ncol = length(species_list)))
#comparing wild and garden individuals
hexp_garden_wild_df <- as.data.frame(matrix(nrow = 3, ncol = length(species_list)))
#loop to compare diversity capture in wild and botanic garden populations
for(sp in 1:length(species_list)){
#load genepop files as genind objects
sp_genind_temp <- read.genepop(paste0("Adegenet_Files/",sp_genind_list[[sp]]), ncode = 3)
#load data frames
sp_df_temp <- read.csv(paste0("Data_Frames/", sp_df_list[[sp]]))
#organize genind object
rownames(sp_genind_temp@tab) <- sp_df_temp[,1]
levels(sp_genind_temp@pop) <- unique(sp_df_temp[,2])
#combining into a df
allrich_df <- gather(allelic.richness(repool(seppop(sp_genind_temp)[18:21]))$Ar)
#run t-test
allrich_pvalue <- as.numeric(kruskal.test(allrich_df[,2]~allrich_df[,1])[3])
#name data frame
allrich_garden_wild_df[1:2,sp] <- as.numeric(colMeans(as.data.frame(allelic.richness(sp_genind_temp)$Ar)))
allrich_garden_wild_df[3,sp] <- allrich_pvalue
rownames(allrich_garden_wild_df) <- c("Garden", "Wild", "p-value")
colnames(allrich_garden_wild_df) <- species_list
#run hexp code
hexp_df <- cbind(as.numeric(summary(seppop(sp_genind_temp)[[1]])$Hexp), as.numeric(summary(seppop(sp_genind_temp)[[2]])$Hexp))
#name columns
colnames(hexp_df) <- c("Garden", "Wild")
#transform the data frame for analyses
hexp_temp_df <- gather(as.data.frame(hexp_df))
#save p-value
hexp_pvalue <- as.numeric(kruskal.test(hexp_temp_df[,2]~hexp_temp_df[,1])[3])
#save in df
hexp_garden_wild_df[1:2,sp] <- as.numeric(colMeans(hexp_df))
hexp_garden_wild_df[3,sp] <- hexp_pvalue
rownames(hexp_garden_wild_df) <- c("Garden", "Wild", "p-value")
colnames(hexp_garden_wild_df) <- species_list
#bind into one document
QUAC_ZAIN_garden_wild_df <- signif(cbind(allrich_garden_wild_df, hexp_garden_wild_df), 3)
#write out df
write.csv(QUAC_ZAIN_garden_wild_df, "../Analyses/Results/Garden_Wild_Comparison/QUAC_ZAIN_garden_wild_df.csv")
}
library(adegenet)
library(diveRsity)
library(poppr)
library(hierfstat)
library(tidyr)
#######################
#     Load files      #
#######################
##set working directory to load in data files
setwd("../../Data_Files")
#genind objects
sp_genind_list <- list.files(path = "Adegenet_Files", pattern = "_clean.gen")
#df files
sp_df_list <- list.files(path = "Data_Frames", pattern = "_clean_df.csv")
#load in function to calculate allele frequency categories
source("../Analyses/RScripts/Fa_sample_funcs.R")
#create functions to run code
colMax <- function(data) sapply(data, max, na.rm = TRUE)
#list of scenarios
species_list <- c("QUAC_wK", "QUAC_wk_ESTSSR", "QUAC_wk_gSSR",
"QUAC_woK", "QUAC_woK_ESTSSR", "QUAC_woK_gSSR",
"ZAIN_og", "ZAIN_rebinned")
#################################################
#     Comparing wild and garden populations     #
#################################################
#comparing wild and garden individuals
allrich_garden_wild_df <- as.data.frame(matrix(nrow = 3, ncol = length(species_list)))
#comparing wild and garden individuals
hexp_garden_wild_df <- as.data.frame(matrix(nrow = 3, ncol = length(species_list)))
#loop to compare diversity capture in wild and botanic garden populations
for(sp in 1:length(species_list)){
#load genepop files as genind objects
sp_genind_temp <- read.genepop(paste0("Adegenet_Files/",sp_genind_list[[sp]]), ncode = 3)
#load data frames
sp_df_temp <- read.csv(paste0("Data_Frames/", sp_df_list[[sp]]))
#organize genind object
rownames(sp_genind_temp@tab) <- sp_df_temp[,1]
levels(sp_genind_temp@pop) <- unique(sp_df_temp[,2])
#combining into a df
allrich_df <- gather(allelic.richness(repool(seppop(sp_genind_temp)[18:21]))$Ar)
#run t-test
allrich_pvalue <- as.numeric(kruskal.test(allrich_df[,2]~allrich_df[,1])[3])
#name data frame
allrich_garden_wild_df[1:2,sp] <- as.numeric(colMeans(as.data.frame(allelic.richness(sp_genind_temp)$Ar)))
allrich_garden_wild_df[3,sp] <- allrich_pvalue
rownames(allrich_garden_wild_df) <- c("Garden", "Wild", "p-value")
colnames(allrich_garden_wild_df) <- species_list
#run hexp code
hexp_df <- cbind(as.numeric(summary(seppop(sp_genind_temp)[[1]])$Hexp), as.numeric(summary(seppop(sp_genind_temp)[[2]])$Hexp))
#name columns
colnames(hexp_df) <- c("Garden", "Wild")
#transform the data frame for analyses
hexp_temp_df <- gather(as.data.frame(hexp_df))
#save p-value
hexp_pvalue <- as.numeric(kruskal.test(hexp_temp_df[,2]~hexp_temp_df[,1])[3])
#save in df
hexp_garden_wild_df[1:2,sp] <- as.numeric(colMeans(hexp_df))
hexp_garden_wild_df[3,sp] <- hexp_pvalue
rownames(hexp_garden_wild_df) <- c("Garden", "Wild", "p-value")
colnames(hexp_garden_wild_df) <- species_list
#bind into one document
QUAC_ZAIN_garden_wild_df <- signif(cbind(allrich_garden_wild_df, hexp_garden_wild_df), 3)
#write out df
write.csv(QUAC_ZAIN_garden_wild_df, "../Analyses/Results/Garden_Wild_Comparison/QUAC_ZAIN_garden_wild_df.csv")
}
#load genepop files as genind objects
sp_genind_temp <- read.genepop(paste0("Adegenet_Files/",sp_genind_list[[sp]]), ncode = 3)
#load data frames
sp_df_temp <- read.csv(paste0("Data_Frames/", sp_df_list[[sp]]))
#organize genind object
rownames(sp_genind_temp@tab) <- sp_df_temp[,1]
levels(sp_genind_temp@pop) <- unique(sp_df_temp[,2])
sp_genind_temp
#combining into a df
allrich_df <- gather(allelic.richness(repool(seppop(sp_genind_temp)[18:21]))$Ar)
allrich_df
#combining into a df
allrich_df <- gather(allelic.richness(repool(seppop(sp_genind_temp)[18:21]))$Ar)
#run t-test
allrich_pvalue <- as.numeric(kruskal.test(allrich_df[,2]~allrich_df[,1])[3])
allrich_pvalue
allrich_garden_wild_df
#name data frame
allrich_garden_wild_df[1:2,sp] <- as.numeric(colMeans(as.data.frame(allelic.richness(sp_genind_temp)$Ar)))
allrich_garden_wild_df[3,sp] <- allrich_pvalue
allrich_garden_wild_df
as.numeric(colMeans(as.data.frame(allelic.richness(sp_genind_temp)$Ar)))
allrich_df[,2]
allrich_df
#genind objects
sp_genind_list <- list.files(path = "Adegenet_Files/Garden_Wild/", pattern = "_clean.gen")
sp_genind_list
#genind objects
sp_genind_list <- list.files(path = "Adegenet_Files/Garden_Wild/", pattern = "_clean.gen")
#df files
sp_df_list <- list.files(path = "Data_Frames", pattern = "_clean_df.csv")
sp_genind_list
#loop to compare diversity capture in wild and botanic garden populations
for(sp in 1:length(species_list)){
#load genepop files as genind objects
sp_genind_temp <- read.genepop(paste0("Adegenet_Files/",sp_genind_list[[sp]]), ncode = 3)
#load data frames
sp_df_temp <- read.csv(paste0("Data_Frames/", sp_df_list[[sp]]))
#organize genind object
rownames(sp_genind_temp@tab) <- sp_df_temp[,1]
levels(sp_genind_temp@pop) <- c("Garden", "Wild")
#combining into a df
allrich_df <- gather(allelic.richness(repool(seppop(sp_genind_temp)[18:21]))$Ar)
#run t-test
allrich_pvalue <- as.numeric(kruskal.test(allrich_df[,2]~allrich_df[,1])[3])
#name data frame
allrich_garden_wild_df[1:2,sp] <- as.numeric(colMeans(as.data.frame(allelic.richness(sp_genind_temp)$Ar)))
allrich_garden_wild_df[3,sp] <- allrich_pvalue
rownames(allrich_garden_wild_df) <- c("Garden", "Wild", "p-value")
colnames(allrich_garden_wild_df) <- species_list
#run hexp code
hexp_df <- cbind(as.numeric(summary(seppop(sp_genind_temp)[[1]])$Hexp), as.numeric(summary(seppop(sp_genind_temp)[[2]])$Hexp))
#name columns
colnames(hexp_df) <- c("Garden", "Wild")
#transform the data frame for analyses
hexp_temp_df <- gather(as.data.frame(hexp_df))
#save p-value
hexp_pvalue <- as.numeric(kruskal.test(hexp_temp_df[,2]~hexp_temp_df[,1])[3])
#save in df
hexp_garden_wild_df[1:2,sp] <- as.numeric(colMeans(hexp_df))
hexp_garden_wild_df[3,sp] <- hexp_pvalue
rownames(hexp_garden_wild_df) <- c("Garden", "Wild", "p-value")
colnames(hexp_garden_wild_df) <- species_list
#bind into one document
QUAC_ZAIN_garden_wild_df <- signif(cbind(allrich_garden_wild_df, hexp_garden_wild_df), 3)
#write out df
write.csv(QUAC_ZAIN_garden_wild_df, "../Analyses/Results/Garden_Wild_Comparison/QUAC_ZAIN_garden_wild_df.csv")
}
#loop to compare diversity capture in wild and botanic garden populations
for(sp in 1:length(species_list)){
#load genepop files as genind objects
sp_genind_temp <- read.genepop(paste0("Adegenet_Files/Garden_Wild/",sp_genind_list[[sp]]), ncode = 3)
#load data frames
sp_df_temp <- read.csv(paste0("Data_Frames/", sp_df_list[[sp]]))
#organize genind object
rownames(sp_genind_temp@tab) <- sp_df_temp[,1]
levels(sp_genind_temp@pop) <- c("Garden", "Wild")
#combining into a df
allrich_df <- gather(allelic.richness(repool(seppop(sp_genind_temp)[18:21]))$Ar)
#run t-test
allrich_pvalue <- as.numeric(kruskal.test(allrich_df[,2]~allrich_df[,1])[3])
#name data frame
allrich_garden_wild_df[1:2,sp] <- as.numeric(colMeans(as.data.frame(allelic.richness(sp_genind_temp)$Ar)))
allrich_garden_wild_df[3,sp] <- allrich_pvalue
rownames(allrich_garden_wild_df) <- c("Garden", "Wild", "p-value")
colnames(allrich_garden_wild_df) <- species_list
#run hexp code
hexp_df <- cbind(as.numeric(summary(seppop(sp_genind_temp)[[1]])$Hexp), as.numeric(summary(seppop(sp_genind_temp)[[2]])$Hexp))
#name columns
colnames(hexp_df) <- c("Garden", "Wild")
#transform the data frame for analyses
hexp_temp_df <- gather(as.data.frame(hexp_df))
#save p-value
hexp_pvalue <- as.numeric(kruskal.test(hexp_temp_df[,2]~hexp_temp_df[,1])[3])
#save in df
hexp_garden_wild_df[1:2,sp] <- as.numeric(colMeans(hexp_df))
hexp_garden_wild_df[3,sp] <- hexp_pvalue
rownames(hexp_garden_wild_df) <- c("Garden", "Wild", "p-value")
colnames(hexp_garden_wild_df) <- species_list
#bind into one document
QUAC_ZAIN_garden_wild_df <- signif(cbind(allrich_garden_wild_df, hexp_garden_wild_df), 3)
#write out df
write.csv(QUAC_ZAIN_garden_wild_df, "../Analyses/Results/Garden_Wild_Comparison/QUAC_ZAIN_garden_wild_df.csv")
}
#load genepop files as genind objects
sp_genind_temp <- read.genepop(paste0("Adegenet_Files/Garden_Wild/",sp_genind_list[[sp]]), ncode = 3)
#load data frames
sp_df_temp <- read.csv(paste0("Data_Frames/", sp_df_list[[sp]]))
#organize genind object
rownames(sp_genind_temp@tab) <- sp_df_temp[,1]
levels(sp_genind_temp@pop) <- c("Garden", "Wild")
#combining into a df
allrich_df <- gather(allelic.richness(repool(seppop(sp_genind_temp)[18:21]))$Ar)
sp_genind_temp
table(sp_genind_temp@pop)
gather(allelic.richness(sp_genind_temp)$Ar)
#combining into a df
allrich_df <- gather(allelic.richness(sp_genind_temp)$Ar)
#run t-test
allrich_pvalue <- as.numeric(kruskal.test(allrich_df[,2]~allrich_df[,1])[3])
allrich_pvalue
allrich_df
#name data frame
allrich_garden_wild_df[1:2,sp] <- as.numeric(colMeans(as.data.frame(allelic.richness(sp_genind_temp)$Ar)))
allrich_garden_wild_df[3,sp] <- allrich_pvalue
allrich_garden_wild_df
cbind(as.numeric(summary(seppop(sp_genind_temp)[[1]])$Hexp), as.numeric(summary(seppop(sp_genind_temp)[[2]])$Hexp))
#run hexp code
hexp_df <- cbind(as.numeric(summary(seppop(sp_genind_temp)[[1]])$Hexp), as.numeric(summary(seppop(sp_genind_temp)[[2]])$Hexp))
#name columns
colnames(hexp_df) <- c("Garden", "Wild")
#transform the data frame for analyses
hexp_temp_df <- gather(as.data.frame(hexp_df))
hexp_temp_df
#save p-value
hexp_pvalue <- as.numeric(kruskal.test(hexp_temp_df[,2]~hexp_temp_df[,1])[3])
#save in df
hexp_garden_wild_df[1:2,sp] <- as.numeric(colMeans(hexp_df))
hexp_garden_wild_df[3,sp] <- hexp_pvalue
rownames(hexp_garden_wild_df) <- c("Garden", "Wild", "p-value")
colnames(hexp_garden_wild_df) <- species_list
hexp_garden_wild_df
#bind into one document
QUAC_ZAIN_garden_wild_df <- signif(cbind(allrich_garden_wild_df, hexp_garden_wild_df), 3)
allrich_garden_wild_df
hexp_garden_wild_df
#sum stats df for garden wild comp
allrich_hexp_df <- matrix(nrow = 6, ncol = length(species_list))
1:2+3
(1):2)+3
(1:2)+3
#sum stats df for garden wild comp
allrich_hexp_df <- matrix(nrow = 6, ncol = length(species_list))
#load genepop files as genind objects
sp_genind_temp <- read.genepop(paste0("Adegenet_Files/Garden_Wild/",sp_genind_list[[sp]]), ncode = 3)
#load data frames
sp_df_temp <- read.csv(paste0("Data_Frames/", sp_df_list[[sp]]))
#organize genind object
rownames(sp_genind_temp@tab) <- sp_df_temp[,1]
levels(sp_genind_temp@pop) <- c("Garden", "Wild")
#combining into a df
allrich_df <- gather(allelic.richness(sp_genind_temp)$Ar)
#run t-test
allrich_pvalue <- as.numeric(kruskal.test(allrich_df[,2]~allrich_df[,1])[3])
#name data frame
allrich_hexp_df[1:2,sp] <- as.numeric(colMeans(as.data.frame(allelic.richness(sp_genind_temp)$Ar)))
allrich_hexp_df[3,sp] <- allrich_pvalue
allrich_hexp_df
#run hexp code
hexp_df <- cbind(as.numeric(summary(seppop(sp_genind_temp)[[1]])$Hexp), as.numeric(summary(seppop(sp_genind_temp)[[2]])$Hexp))
#name columns
colnames(hexp_df) <- c("Garden", "Wild")
#transform the data frame for analyses
hexp_temp_df <- gather(as.data.frame(hexp_df))
#save p-value
hexp_pvalue <- as.numeric(kruskal.test(hexp_temp_df[,2]~hexp_temp_df[,1])[3])
#save in df
allrich_hexp_df[(1:2)+3,sp] <- as.numeric(colMeans(hexp_df))
allrich_hexp_df[6,sp] <- hexp_pvalue
allrich_hexp_df
#loop to compare diversity capture in wild and botanic garden populations
for(sp in 1:length(species_list)){
#load genepop files as genind objects
sp_genind_temp <- read.genepop(paste0("Adegenet_Files/Garden_Wild/",sp_genind_list[[sp]]), ncode = 3)
#load data frames
sp_df_temp <- read.csv(paste0("Data_Frames/", sp_df_list[[sp]]))
#organize genind object
rownames(sp_genind_temp@tab) <- sp_df_temp[,1]
levels(sp_genind_temp@pop) <- c("Garden", "Wild")
#combining into a df
allrich_df <- gather(allelic.richness(sp_genind_temp)$Ar)
#run t-test
allrich_pvalue <- as.numeric(kruskal.test(allrich_df[,2]~allrich_df[,1])[3])
#name data frame
allrich_hexp_df[1:2,sp] <- as.numeric(colMeans(as.data.frame(allelic.richness(sp_genind_temp)$Ar)))
allrich_hexp_df[3,sp] <- allrich_pvalue
#run hexp code
hexp_df <- cbind(as.numeric(summary(seppop(sp_genind_temp)[[1]])$Hexp), as.numeric(summary(seppop(sp_genind_temp)[[2]])$Hexp))
#name columns
colnames(hexp_df) <- c("Garden", "Wild")
#transform the data frame for analyses
hexp_temp_df <- gather(as.data.frame(hexp_df))
#save p-value
hexp_pvalue <- as.numeric(kruskal.test(hexp_temp_df[,2]~hexp_temp_df[,1])[3])
#save in df
allrich_hexp_df[(1:2)+3,sp] <- as.numeric(colMeans(hexp_df))
allrich_hexp_df[6,sp] <- hexp_pvalue
#name colnames and rownames
colnames(allrich_hexp_df) <- species_list
rownames(allrich_hexp_df) <- c("allrich_garden", "allrich_wild", "allrich_pvalue",
"hexp_garden", "hexp_wild", "hexp_pvalue")
#write out df
write.csv(QUAC_ZAIN_garden_wild_df, "../Analyses/Results/Garden_Wild_Comparison/QUAC_ZAIN_garden_wild_df.csv")
}
#loop to compare diversity capture in wild and botanic garden populations
for(sp in 1:length(species_list)){
#load genepop files as genind objects
sp_genind_temp <- read.genepop(paste0("Adegenet_Files/Garden_Wild/",sp_genind_list[[sp]]), ncode = 3)
#load data frames
sp_df_temp <- read.csv(paste0("Data_Frames/", sp_df_list[[sp]]))
#organize genind object
rownames(sp_genind_temp@tab) <- sp_df_temp[,1]
levels(sp_genind_temp@pop) <- c("Garden", "Wild")
#combining into a df
allrich_df <- gather(allelic.richness(sp_genind_temp)$Ar)
#run t-test
allrich_pvalue <- as.numeric(kruskal.test(allrich_df[,2]~allrich_df[,1])[3])
#name data frame
allrich_hexp_df[1:2,sp] <- as.numeric(colMeans(as.data.frame(allelic.richness(sp_genind_temp)$Ar)))
allrich_hexp_df[3,sp] <- allrich_pvalue
#run hexp code
hexp_df <- cbind(as.numeric(summary(seppop(sp_genind_temp)[[1]])$Hexp), as.numeric(summary(seppop(sp_genind_temp)[[2]])$Hexp))
#name columns
colnames(hexp_df) <- c("Garden", "Wild")
#transform the data frame for analyses
hexp_temp_df <- gather(as.data.frame(hexp_df))
#save p-value
hexp_pvalue <- as.numeric(kruskal.test(hexp_temp_df[,2]~hexp_temp_df[,1])[3])
#save in df
allrich_hexp_df[(1:2)+3,sp] <- as.numeric(colMeans(hexp_df))
allrich_hexp_df[6,sp] <- hexp_pvalue
#name colnames and rownames
colnames(allrich_hexp_df) <- species_list
rownames(allrich_hexp_df) <- c("allrich_garden", "allrich_wild", "allrich_pvalue",
"hexp_garden", "hexp_wild", "hexp_pvalue")
}
#write out df
write.csv(allrich_hexp_df, "../Analyses/Results/Garden_Wild_Comparison/QUAC_ZAIN_garden_wild_df.csv")
#list out the scenarios
scenarios_list <- c("QUAC_wK", "QUAC_woK", "ZAIN_og", "ZAIN_rebinned")
#df files
sp_df_list <- list.files(path = "Data_Frames", pattern = "_clean_df.csv")
sp_df_list
