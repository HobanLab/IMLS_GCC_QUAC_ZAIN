#########################
#     Load in Files     #
#########################
#set working directory
setwd("../../Data_Files")
#data file lists
sp_genind_list <- list.files(path = "Adegenet_Files", pattern = "clean.gen")
library(adegenet)
library(diveRsity)
library(ggplot2)
#########################
#     Load in Files     #
#########################
#set working directory
setwd("../../Data_Files")
#data file lists
sp_genind_list <- list.files(path = "Adegenet_Files", pattern = "clean.gen")
sp_df_list <- list.files(path = "Data_Frames", pattern = "clean_df.csv")
#list of scenarios
scenario_list <- c("QUAC_wK", "QUAC_woK", "ZAIN_og", "ZAIN_rebinned")
#pop list
pop_list <- list(c(1:17), c(1:17), c(1:10), c(1:10),
c(18:22), c(18:21), c(11:35), c(11:35))
#loop to write garden and wild comparison PCA
for(sp in 1:length(scenario_list)){
##code to reorganize genind objects into "garden" and "wild" genind objects
#load genepop files as genind objects
sp_genind_temp <- read.genepop(paste0("Adegenet_Files/",sp_genind_list[[sp]]), ncode = 3)
#separate garden individuals into one population
sp_garden_genind <- repool(seppop(sp_genind_temp)[pop_list[[sp]]])
#rename populations
levels(sp_garden_genind@pop) <- rep("Garden", length(pop_list[[sp]]))
#separate wild individuals and garden individuals
sp_wild_genind <- repool(seppop(sp_genind_temp)[pop_list[[sp+4]]])
#rename to wild only
levels(sp_wild_genind@pop) <- rep("Wild", length(pop_list[[sp+4]]))
#combine into one genind object
sp_genind_rp <- repool(sp_garden_genind, sp_wild_genind)
#create tab object for genind
sp_tab <- tab(sp_genind_rp, freq=TRUE, NA.method = "mean")
#run PCA
sp_PCA <- dudi.pca(sp_tab, scale = FALSE, nf = 2, scannf = FALSE)
#create PCA data frame
sp_PCA_df_temp <- as.data.frame(cbind(as.numeric(sp_PCA$li$Axis1),
as.numeric(sp_PCA$li$Axis2),
c(rep("Garden", as.numeric(table(sp_garden_genind@pop))),
rep("Wild", as.numeric(table(sp_wild_genind@pop))))))
colnames(sp_PCA_df_temp) <- c("Axis1","Axis2","Pop")
#calculate % variation explained by axis
sp_pc1 <- signif(((sp_PCA$eig[1])/sum(sp_PCA$eig))*100, 3)
sp_pc2 <- signif(((sp_PCA$eig[2])/sum(sp_PCA$eig))*100, 3)
#plot PCA
pdf(paste0("../Analyses/Results/Clustering/PCA/", scenario_list[[sp]], "_garden_wild_PCA.pdf"),width = 10, height = 8)
print(ggplot(sp_PCA_df_temp, aes(as.numeric(Axis1), as.numeric(Axis2), col = Pop)) + geom_point() +
stat_ellipse() +
xlab(paste0("PC1 (", sp_pc1, "%)")) +
ylab(paste0("PC2 (", sp_pc2, "%)")) +
theme_bw() +
scale_color_manual(values=hcl.colors(n = length(unique(sp_PCA_df_temp$Pop)), palette = "viridis")))
dev.off()
}
#loop to generate all wild pops PCA
for(sp in 1:length(scenario_list)){
#load in genind object
sp_genind_temp <- read.genepop(paste0("Adegenet_Files/", sp_genind_list[[sp]]), ncode = 3)
#load data frame
sp_df <- read.csv(paste0("Data_Frames/", sp_df_list[[sp]]))
#separate wild individuals
sp_wild_genind <- repool(seppop(sp_genind_temp)[pop_list[[sp+4]]])
#create tab object for genind
sp_tab <- tab(sp_wild_genind, freq=TRUE, NA.method="mean")
#run PCA
sp_PCA <- dudi.pca(sp_tab, scale = FALSE, nf = 2, scannf = FALSE)
#create PCA data frame
sp_PCA_df_temp <- as.data.frame(cbind(as.numeric(sp_PCA$li$Axis1),
as.numeric(sp_PCA$li$Axis2),
sp_df[,2]))
colnames(sp_PCA_df_temp) <- c("Axis1","Axis2","Pop")
#calculate % variation explained by axis
sp_pc1 <- signif(((sp_PCA$eig[1])/sum(sp_PCA$eig))*100, 3)
sp_pc2 <- signif(((sp_PCA$eig[2])/sum(sp_PCA$eig))*100, 3)
#plot PCA
pdf(paste0("../Analyses/Results/Clustering/PCA/", species_list[[sp]], "_wildpop_PCA.pdf"),width = 10, height = 8)
print(ggplot(sp_PCA_df_temp, aes(as.numeric(Axis1), as.numeric(Axis2), col = Pop)) + geom_point() +
stat_ellipse() +
xlab(paste0("PC1 (", sp_pc1, "%)")) +
ylab(paste0("PC2 (", sp_pc2, "%)")) +
theme_bw() +
scale_color_manual(values=randomColor(count = length(unique(sp_PCA_df_temp$Pop)))))
dev.off()
}
#loop to generate all wild pops PCA
for(sp in 1:length(scenario_list)){
#load in genind object
sp_genind_temp <- read.genepop(paste0("Adegenet_Files/", sp_genind_list[[sp]]), ncode = 3)
#load data frame
sp_df <- read.csv(paste0("Data_Frames/", sp_df_list[[sp]]))
#separate wild individuals
sp_wild_genind <- repool(seppop(sp_genind_temp)[pop_list[[sp+4]]])
#create tab object for genind
sp_tab <- tab(sp_wild_genind, freq=TRUE, NA.method="mean")
#run PCA
sp_PCA <- dudi.pca(sp_tab, scale = FALSE, nf = 2, scannf = FALSE)
#create PCA data frame
sp_PCA_df_temp <- as.data.frame(cbind(as.numeric(sp_PCA$li$Axis1),
as.numeric(sp_PCA$li$Axis2),
sp_df[,2]))
colnames(sp_PCA_df_temp) <- c("Axis1","Axis2","Pop")
#calculate % variation explained by axis
sp_pc1 <- signif(((sp_PCA$eig[1])/sum(sp_PCA$eig))*100, 3)
sp_pc2 <- signif(((sp_PCA$eig[2])/sum(sp_PCA$eig))*100, 3)
#plot PCA
pdf(paste0("../Analyses/Results/Clustering/PCA/", scenario_list[[sp]], "_wildpop_PCA.pdf"),width = 10, height = 8)
print(ggplot(sp_PCA_df_temp, aes(as.numeric(Axis1), as.numeric(Axis2), col = Pop)) + geom_point() +
stat_ellipse() +
xlab(paste0("PC1 (", sp_pc1, "%)")) +
ylab(paste0("PC2 (", sp_pc2, "%)")) +
theme_bw() +
scale_color_manual(values=randomColor(count = length(unique(sp_PCA_df_temp$Pop)))))
dev.off()
}
library(randomcoloR)
#loop to generate all wild pops PCA
for(sp in 1:length(scenario_list)){
#load in genind object
sp_genind_temp <- read.genepop(paste0("Adegenet_Files/", sp_genind_list[[sp]]), ncode = 3)
#load data frame
sp_df <- read.csv(paste0("Data_Frames/", sp_df_list[[sp]]))
#separate wild individuals
sp_wild_genind <- repool(seppop(sp_genind_temp)[pop_list[[sp+4]]])
#create tab object for genind
sp_tab <- tab(sp_wild_genind, freq=TRUE, NA.method="mean")
#run PCA
sp_PCA <- dudi.pca(sp_tab, scale = FALSE, nf = 2, scannf = FALSE)
#create PCA data frame
sp_PCA_df_temp <- as.data.frame(cbind(as.numeric(sp_PCA$li$Axis1),
as.numeric(sp_PCA$li$Axis2),
sp_df[,2]))
colnames(sp_PCA_df_temp) <- c("Axis1","Axis2","Pop")
#calculate % variation explained by axis
sp_pc1 <- signif(((sp_PCA$eig[1])/sum(sp_PCA$eig))*100, 3)
sp_pc2 <- signif(((sp_PCA$eig[2])/sum(sp_PCA$eig))*100, 3)
#plot PCA
pdf(paste0("../Analyses/Results/Clustering/PCA/", scenario_list[[sp]], "_wildpop_PCA.pdf"),width = 10, height = 8)
print(ggplot(sp_PCA_df_temp, aes(as.numeric(Axis1), as.numeric(Axis2), col = Pop)) + geom_point() +
stat_ellipse() +
xlab(paste0("PC1 (", sp_pc1, "%)")) +
ylab(paste0("PC2 (", sp_pc2, "%)")) +
theme_bw() +
scale_color_manual(values=randomColor(count = length(unique(sp_PCA_df_temp$Pop)))))
dev.off()
}
#loop to generate garden vs. all wild pops PCA
for(sp in 1:length(scenario_list)){
#load in genind object
sp_genind_temp <- read.genepop(paste0("Adegenet_Files/", sp_genind_list[[sp]]), ncode = 3)
#load in species data frame
sp_df <- read.csv(paste0("Data_Frames/", sp_df_list[[sp]]))
#separate garden individuals into one population
sp_garden_genind <- repool(seppop(sp_genind_temp)[pop_list[[sp]]])
#rename populations
levels(sp_garden_genind@pop) <- rep("Garden", length(pop_list[[sp]]))
#separate wild individuals
sp_wild_genind <- repool(seppop(sp_genind_temp)[pop_list[[sp+4]]])
#name pops by wild pop
levels(sp_wild_genind@pop) <- unique(sp_df[,2])
#combine objects into one genind object from wild and garden processing
sp_garden_allwildpop_genind <- repool(sp_garden_genind, sp_wild_genind)
#create tab object for genind
sp_tab <- tab(sp_garden_allwildpop_genind, freq=TRUE, NA.method="mean")
#run PCA
sp_PCA <- dudi.pca(sp_tab, scale = FALSE, nf = 2, scannf = FALSE)
#create PCA data frame
sp_PCA_df_temp <- as.data.frame(cbind(as.numeric(sp_PCA$li$Axis1),
as.numeric(sp_PCA$li$Axis2),
sp_df[,2]))
colnames(sp_PCA_df_temp) <- c("Axis1","Axis2","Pop")
#calculate % variation explained by axis
sp_pc1 <- signif(((sp_PCA$eig[1])/sum(sp_PCA$eig))*100, 3)
sp_pc2 <- signif(((sp_PCA$eig[2])/sum(sp_PCA$eig))*100, 3)
#plot PCA
pdf(paste0("../Analyses/Results/Clustering/PCA/", species_list[[sp]], "_garden_allwildpop_PCA.pdf"),width = 10, height = 8)
print(ggplot(sp_PCA_df_temp, aes(as.numeric(Axis1), as.numeric(Axis2), col = Pop)) + geom_point() +
stat_ellipse() +
xlab(paste0("PC1 (", sp_pc1, "%)")) +
ylab(paste0("PC2 (", sp_pc2, "%)")) +
theme_bw() +
scale_color_manual(values=hcl.colors(n = length(unique(sp_PCA_df_temp$Pop)), palette = "viridis")))
dev.off()
}
#loop to generate garden vs. all wild pops PCA
for(sp in 1:length(scenario_list)){
#load in genind object
sp_genind_temp <- read.genepop(paste0("Adegenet_Files/", sp_genind_list[[sp]]), ncode = 3)
#load in species data frame
sp_df <- read.csv(paste0("Data_Frames/", sp_df_list[[sp]]))
#separate garden individuals into one population
sp_garden_genind <- repool(seppop(sp_genind_temp)[pop_list[[sp]]])
#rename populations
levels(sp_garden_genind@pop) <- rep("Garden", length(pop_list[[sp]]))
#separate wild individuals
sp_wild_genind <- repool(seppop(sp_genind_temp)[pop_list[[sp+4]]])
#name pops by wild pop
levels(sp_wild_genind@pop) <- unique(sp_df[,2])
#combine objects into one genind object from wild and garden processing
sp_garden_allwildpop_genind <- repool(sp_garden_genind, sp_wild_genind)
#create tab object for genind
sp_tab <- tab(sp_garden_allwildpop_genind, freq=TRUE, NA.method="mean")
#run PCA
sp_PCA <- dudi.pca(sp_tab, scale = FALSE, nf = 2, scannf = FALSE)
#create PCA data frame
sp_PCA_df_temp <- as.data.frame(cbind(as.numeric(sp_PCA$li$Axis1),
as.numeric(sp_PCA$li$Axis2),
sp_df[,2]))
colnames(sp_PCA_df_temp) <- c("Axis1","Axis2","Pop")
#calculate % variation explained by axis
sp_pc1 <- signif(((sp_PCA$eig[1])/sum(sp_PCA$eig))*100, 3)
sp_pc2 <- signif(((sp_PCA$eig[2])/sum(sp_PCA$eig))*100, 3)
#plot PCA
pdf(paste0("../Analyses/Results/Clustering/PCA/", scenario_list[[sp]], "_garden_allwildpop_PCA.pdf"),width = 10, height = 8)
print(ggplot(sp_PCA_df_temp, aes(as.numeric(Axis1), as.numeric(Axis2), col = Pop)) + geom_point() +
stat_ellipse() +
xlab(paste0("PC1 (", sp_pc1, "%)")) +
ylab(paste0("PC2 (", sp_pc2, "%)")) +
theme_bw() +
scale_color_manual(values=hcl.colors(n = length(unique(sp_PCA_df_temp$Pop)), palette = "viridis")))
dev.off()
}
