#          Genetic Stats by Pop           #
###########################################
#create a list of pop types
pop_type_list <- c("Garden", "Wild")
#load genepop files as genind objects
sp_genind_temp <- read.genepop(paste0("Adegenet_Files/",sp_genind_list[[sp]]), ncode = 3)
#load data frames
sp_df_temp <- read.csv(paste0("Data_Frames/", sp_df_list[[sp]]))
#organize genind
rownames(sp_genind_temp@tab) <- sp_df_temp[,1]
levels(sp_genind_temp@pop) <- unique(sp_df_temp[,2])
#limit by pop_type
sp_poptype_df_temp <- sp_df_temp[sp_df_temp[,3] == paste0(pop_type_list[[pop_type]]),]
###loops to generate summary statistics for populations
##outer loop is by species
#inner loop is by wild or botanic garden
for(sp in 1:length(species_list)){
##write loop to calculate all summary stats
for(pop_type in 1:length(pop_type_list)){
#load genepop files as genind objects
sp_genind_temp <- read.genepop(paste0("Adegenet_Files/",sp_genind_list[[sp]]), ncode = 3)
#load data frames
sp_df_temp <- read.csv(paste0("Data_Frames/", sp_df_list[[sp]]))
#organize genind
rownames(sp_genind_temp@tab) <- sp_df_temp[,1]
levels(sp_genind_temp@pop) <- unique(sp_df_temp[,2])
#limit by pop_type
sp_poptype_df_temp <- sp_df_temp[sp_df_temp[,3] == paste0(pop_type_list[[pop_type]]),]
sp_poptype_genind_temp <- sp_genind_temp[rownames(sp_genind_temp@tab) %in% sp_poptype_df_temp[,1],]
##start genetic analyses
#create genetic summary of the genind file
sp_sum <- summary(sp_poptype_genind_temp)
#create poppr file
sp_poppr <- poppr(sp_poptype_genind_temp)
#save mean for final output table
sp_hexp_mean <- sp_poppr[1:length(levels(sp_poptype_genind_temp@pop)),10]
#allele numbers by pop
sp_nall <- sp_sum$pop.n.all
#individual numbers
sp_ind <- sp_poppr[1:length(levels(sp_poptype_genind_temp@pop)), 2:3]
#save allelic richness for comparison
sp_allrich_list <- allelic.richness(sp_poptype_genind_temp)$Ar
sp_allrich_mean <- colMeans(allelic.richness(sp_poptype_genind_temp)$Ar)
#create data frame
sp_allpop_gendiv_sumstat_df <- signif(cbind(sp_ind, sp_nall, sp_allrich_mean, sp_hexp_mean),3)
#name rows
rownames(sp_allpop_gendiv_sumstat_df) <- unique(sp_poptype_df_temp$Pop)
colnames(sp_allpop_gendiv_sumstat_df) <- c("Ind","MLG", "NAll", "All_Rich", "Hexp")
#write out data frame
write.csv(sp_allpop_gendiv_sumstat_df, paste0("../Analyses/Results/Sum_Stats/", gsub("\\..*","",sp_genind_list[[sp]]),
"_gendiv_sumstats.csv"))
}
}
sp_poptype_genind_temp
###loops to generate summary statistics for populations
##outer loop is by species
#inner loop is by wild or botanic garden
for(sp in 1:length(sp_genind_list)){
##write loop to calculate all summary stats
for(pop_type in 1:length(pop_type_list)){
#load genepop files as genind objects
sp_genind_temp <- read.genepop(paste0("Adegenet_Files/",sp_genind_list[[sp]]), ncode = 3)
#load data frames
sp_df_temp <- read.csv(paste0("Data_Frames/", sp_df_list[[sp]]))
#organize genind
rownames(sp_genind_temp@tab) <- sp_df_temp[,1]
levels(sp_genind_temp@pop) <- unique(sp_df_temp[,2])
#limit by pop_type
sp_poptype_df_temp <- sp_df_temp[sp_df_temp[,3] == paste0(pop_type_list[[pop_type]]),]
sp_poptype_genind_temp <- sp_genind_temp[rownames(sp_genind_temp@tab) %in% sp_poptype_df_temp[,1],]
##start genetic analyses
#create genetic summary of the genind file
sp_sum <- summary(sp_poptype_genind_temp)
#create poppr file
sp_poppr <- poppr(sp_poptype_genind_temp)
#save mean for final output table
sp_hexp_mean <- sp_poppr[1:length(levels(sp_poptype_genind_temp@pop)),10]
#allele numbers by pop
sp_nall <- sp_sum$pop.n.all
#individual numbers
sp_ind <- sp_poppr[1:length(levels(sp_poptype_genind_temp@pop)), 2:3]
#save allelic richness for comparison
sp_allrich_list <- allelic.richness(sp_poptype_genind_temp)$Ar
sp_allrich_mean <- colMeans(allelic.richness(sp_poptype_genind_temp)$Ar)
#create data frame
sp_allpop_gendiv_sumstat_df <- signif(cbind(sp_ind, sp_nall, sp_allrich_mean, sp_hexp_mean),3)
#name rows
rownames(sp_allpop_gendiv_sumstat_df) <- unique(sp_poptype_df_temp$Pop)
colnames(sp_allpop_gendiv_sumstat_df) <- c("Ind","MLG", "NAll", "All_Rich", "Hexp")
#write out data frame
write.csv(sp_allpop_gendiv_sumstat_df, paste0("../Analyses/Results/Sum_Stats/", gsub("\\..*","",sp_genind_list[[sp]]),
"_gendiv_sumstats.csv"))
}
}
##start genetic analyses
#create genetic summary of the genind file
sp_sum <- summary(sp_poptype_genind_temp)
sp_sum
###loops to generate summary statistics for populations
##outer loop is by species
#inner loop is by wild or botanic garden
for(sp in 1:length(sp_genind_list)){
##write loop to calculate all summary stats
for(pop_type in 1:length(pop_type_list)){
#load genepop files as genind objects
sp_genind_temp <- read.genepop(paste0("Adegenet_Files/",sp_genind_list[[sp]]), ncode = 3)
#load data frames
sp_df_temp <- read.csv(paste0("Data_Frames/", sp_df_list[[sp]]))
#organize genind
rownames(sp_genind_temp@tab) <- sp_df_temp[,1]
levels(sp_genind_temp@pop) <- unique(sp_df_temp[,2])
#limit by pop_type
#sp_poptype_df_temp <- sp_df_temp[sp_df_temp[,3] == paste0(pop_type_list[[pop_type]]),]
#sp_poptype_genind_temp <- sp_genind_temp[rownames(sp_genind_temp@tab) %in% sp_poptype_df_temp[,1],]
##start genetic analyses
#create genetic summary of the genind file
sp_sum <- summary(sp_poptype_genind_temp)
#create poppr file
sp_poppr <- poppr(sp_poptype_genind_temp)
#save mean for final output table
sp_hexp_mean <- sp_poppr[1:length(levels(sp_poptype_genind_temp@pop)),10]
#allele numbers by pop
sp_nall <- sp_sum$pop.n.all
#individual numbers
sp_ind <- sp_poppr[1:length(levels(sp_poptype_genind_temp@pop)), 2:3]
#save allelic richness for comparison
sp_allrich_list <- allelic.richness(sp_poptype_genind_temp)$Ar
sp_allrich_mean <- colMeans(allelic.richness(sp_poptype_genind_temp)$Ar)
#create data frame
sp_allpop_gendiv_sumstat_df <- signif(cbind(sp_ind, sp_nall, sp_allrich_mean, sp_hexp_mean),3)
#name rows
rownames(sp_allpop_gendiv_sumstat_df) <- unique(sp_poptype_df_temp$Pop)
colnames(sp_allpop_gendiv_sumstat_df) <- c("Ind","MLG", "NAll", "All_Rich", "Hexp")
#write out data frame
write.csv(sp_allpop_gendiv_sumstat_df, paste0("../Analyses/Results/Sum_Stats/", gsub("\\..*","",sp_genind_list[[sp]]),
"_gendiv_sumstats.csv"))
}
}
sp_genind_list
#load genepop files as genind objects
sp_genind_temp <- read.genepop(paste0("Adegenet_Files/",sp_genind_list[[1]]), ncode = 3)
#load data frames
sp_df_temp <- read.csv(paste0("Data_Frames/", sp_df_list[[1]]))
#organize genind
rownames(sp_genind_temp@tab) <- sp_df_temp[,1]
levels(sp_genind_temp@pop) <- unique(sp_df_temp[,2])
##start genetic analyses
#create genetic summary of the genind file
#sp_sum <- summary(sp_poptype_genind_temp)
#create poppr file
sp_poppr <- poppr(sp_poptype_genind_temp)
table(sp_genind_temp@pop)
###loops to generate summary statistics for populations
##outer loop is by species
#inner loop is by wild or botanic garden
for(sp in 1:length(sp_genind_list)){
##write loop to calculate all summary stats
for(pop_type in 1:length(pop_type_list)){
#load genepop files as genind objects
sp_genind_temp <- read.genepop(paste0("Adegenet_Files/",sp_genind_list[[1]]), ncode = 3)
#load data frames
sp_df_temp <- read.csv(paste0("Data_Frames/", sp_df_list[[1]]))
#organize genind
rownames(sp_genind_temp@tab) <- sp_df_temp[,1]
levels(sp_genind_temp@pop) <- unique(sp_df_temp[,2])
#limit by pop_type
#sp_poptype_df_temp <- sp_df_temp[sp_df_temp[,3] == paste0(pop_type_list[[pop_type]]),]
#sp_poptype_genind_temp <- sp_genind_temp[rownames(sp_genind_temp@tab) %in% sp_poptype_df_temp[,1],]
##start genetic analyses
#create genetic summary of the genind file
#sp_sum <- summary(sp_poptype_genind_temp)
#create poppr file
sp_poppr <- poppr(sp_genind_temp)
#save mean for final output table
sp_hexp_mean <- sp_poppr[1:length(levels(sp_genind_temp@pop)),10]
#allele numbers by pop
sp_nall <- sp_sum$pop.n.all
#individual numbers
sp_ind <- sp_poppr[1:length(levels(sp_genind_temp@pop)), 2:3]
#save allelic richness for comparison
sp_allrich_list <- allelic.richness(sp_genind_temp)$Ar
sp_allrich_mean <- colMeans(allelic.richness(sp_genind_temp)$Ar)
#create data frame
sp_allpop_gendiv_sumstat_df <- signif(cbind(sp_ind, sp_nall, sp_allrich_mean, sp_hexp_mean),3)
#name rows
rownames(sp_allpop_gendiv_sumstat_df) <- unique(sp_df_temp$Pop)
colnames(sp_allpop_gendiv_sumstat_df) <- c("Ind","MLG", "NAll", "All_Rich", "Hexp")
#write out data frame
write.csv(sp_allpop_gendiv_sumstat_df, paste0("../Analyses/Results/Sum_Stats/", gsub("\\..*","",sp_genind_list[[sp]]),
"_gendiv_sumstats.csv"))
}
}
###loops to generate summary statistics for populations
##outer loop is by species
#inner loop is by wild or botanic garden
for(sp in 1:length(sp_genind_list)){
##write loop to calculate all summary stats
for(pop_type in 1:length(pop_type_list)){
#load genepop files as genind objects
sp_genind_temp <- read.genepop(paste0("Adegenet_Files/",sp_genind_list[[1]]), ncode = 3)
#load data frames
sp_df_temp <- read.csv(paste0("Data_Frames/", sp_df_list[[1]]))
#organize genind
rownames(sp_genind_temp@tab) <- sp_df_temp[,1]
levels(sp_genind_temp@pop) <- unique(sp_df_temp[,2])
#limit by pop_type
#sp_poptype_df_temp <- sp_df_temp[sp_df_temp[,3] == paste0(pop_type_list[[pop_type]]),]
#sp_poptype_genind_temp <- sp_genind_temp[rownames(sp_genind_temp@tab) %in% sp_poptype_df_temp[,1],]
##start genetic analyses
#create genetic summary of the genind file
sp_sum <- summary(sp_genind_temp)
#create poppr file
sp_poppr <- poppr(sp_genind_temp)
#save mean for final output table
sp_hexp_mean <- sp_poppr[1:length(levels(sp_genind_temp@pop)),10]
#allele numbers by pop
sp_nall <- sp_sum$pop.n.all
#individual numbers
sp_ind <- sp_poppr[1:length(levels(sp_genind_temp@pop)), 2:3]
#save allelic richness for comparison
sp_allrich_list <- allelic.richness(sp_genind_temp)$Ar
sp_allrich_mean <- colMeans(allelic.richness(sp_genind_temp)$Ar)
#create data frame
sp_allpop_gendiv_sumstat_df <- signif(cbind(sp_ind, sp_nall, sp_allrich_mean, sp_hexp_mean),3)
#name rows
rownames(sp_allpop_gendiv_sumstat_df) <- unique(sp_df_temp$Pop)
colnames(sp_allpop_gendiv_sumstat_df) <- c("Ind","MLG", "NAll", "All_Rich", "Hexp")
#write out data frame
write.csv(sp_allpop_gendiv_sumstat_df, paste0("../Analyses/Results/Sum_Stats/", gsub("\\..*","",sp_genind_list[[sp]]),
"_gendiv_sumstats.csv"))
}
}
###loops to generate summary statistics for populations
##outer loop is by species
#inner loop is by wild or botanic garden
for(sp in 1:length(sp_genind_list)){
##write loop to calculate all summary stats
for(pop_type in 1:length(pop_type_list)){
#load genepop files as genind objects
sp_genind_temp <- read.genepop(paste0("Adegenet_Files/",sp_genind_list[[sp]]), ncode = 3)
#load data frames
sp_df_temp <- read.csv(paste0("Data_Frames/", sp_df_list[[sp]]))
#organize genind
rownames(sp_genind_temp@tab) <- sp_df_temp[,1]
levels(sp_genind_temp@pop) <- unique(sp_df_temp[,2])
#limit by pop_type
#sp_poptype_df_temp <- sp_df_temp[sp_df_temp[,3] == paste0(pop_type_list[[pop_type]]),]
#sp_poptype_genind_temp <- sp_genind_temp[rownames(sp_genind_temp@tab) %in% sp_poptype_df_temp[,1],]
##start genetic analyses
#create genetic summary of the genind file
sp_sum <- summary(sp_genind_temp)
#create poppr file
sp_poppr <- poppr(sp_genind_temp)
#save mean for final output table
sp_hexp_mean <- sp_poppr[1:length(levels(sp_genind_temp@pop)),10]
#allele numbers by pop
sp_nall <- sp_sum$pop.n.all
#individual numbers
sp_ind <- sp_poppr[1:length(levels(sp_genind_temp@pop)), 2:3]
#save allelic richness for comparison
sp_allrich_list <- allelic.richness(sp_genind_temp)$Ar
sp_allrich_mean <- colMeans(allelic.richness(sp_genind_temp)$Ar)
#create data frame
sp_allpop_gendiv_sumstat_df <- signif(cbind(sp_ind, sp_nall, sp_allrich_mean, sp_hexp_mean),3)
#name rows
rownames(sp_allpop_gendiv_sumstat_df) <- unique(sp_df_temp$Pop)
colnames(sp_allpop_gendiv_sumstat_df) <- c("Ind","MLG", "NAll", "All_Rich", "Hexp")
#write out data frame
write.csv(sp_allpop_gendiv_sumstat_df, paste0("../Analyses/Results/Sum_Stats/", gsub("\\..*","",sp_genind_list[[sp]]),
"_gendiv_sumstats.csv"))
}
}
###loops to generate summary statistics for populations
##outer loop is by species
#inner loop is by wild or botanic garden
for(sp in 1:length(sp_genind_list)){
##write loop to calculate all summary stats
for(pop_type in 1:length(pop_type_list)){
#load genepop files as genind objects
sp_genind_temp <- read.genepop(paste0("Adegenet_Files/",sp_genind_list[[sp]]), ncode = 3)
#load data frames
sp_df_temp <- read.csv(paste0("Data_Frames/", sp_df_list[[sp]]))
#organize genind
rownames(sp_genind_temp@tab) <- sp_df_temp[,1]
levels(sp_genind_temp@pop) <- unique(sp_df_temp[,2])
#limit by pop_type
sp_poptype_df_temp <- sp_df_temp[sp_df_temp[,3] == paste0(pop_type_list[[pop_type]]),]
sp_poptype_genind_temp <- sp_genind_temp[rownames(sp_genind_temp@tab) %in% sp_poptype_df_temp[,1],]
##start genetic analyses
#create genetic summary of the genind file
sp_sum <- summary(sp_genind_temp)
#create poppr file
sp_poppr <- poppr(sp_genind_temp)
#save mean for final output table
sp_hexp_mean <- sp_poppr[1:length(levels(sp_genind_temp@pop)),10]
#allele numbers by pop
sp_nall <- sp_sum$pop.n.all
#individual numbers
sp_ind <- sp_poppr[1:length(levels(sp_genind_temp@pop)), 2:3]
#save allelic richness for comparison
sp_allrich_list <- allelic.richness(sp_genind_temp)$Ar
sp_allrich_mean <- colMeans(allelic.richness(sp_genind_temp)$Ar)
#create data frame
sp_allpop_gendiv_sumstat_df <- signif(cbind(sp_ind, sp_nall, sp_allrich_mean, sp_hexp_mean),3)
#name rows
rownames(sp_allpop_gendiv_sumstat_df) <- unique(sp_df_temp$Pop)
colnames(sp_allpop_gendiv_sumstat_df) <- c("Ind","MLG", "NAll", "All_Rich", "Hexp")
#write out data frame
write.csv(sp_allpop_gendiv_sumstat_df, paste0("../Analyses/Results/Sum_Stats/", pop_type_list[[pop_type]], gsub("\\..*","",sp_genind_list[[sp]]),
"_gendiv_sumstats.csv"))
}
}
###loops to generate summary statistics for populations
##outer loop is by species
#inner loop is by wild or botanic garden
for(sp in 1:length(sp_genind_list)){
##write loop to calculate all summary stats
for(pop_type in 1:length(pop_type_list)){
#load genepop files as genind objects
sp_genind_temp <- read.genepop(paste0("Adegenet_Files/",sp_genind_list[[sp]]), ncode = 3)
#load data frames
sp_df_temp <- read.csv(paste0("Data_Frames/", sp_df_list[[sp]]))
#organize genind
rownames(sp_genind_temp@tab) <- sp_df_temp[,1]
levels(sp_genind_temp@pop) <- unique(sp_df_temp[,2])
#limit by pop_type
sp_poptype_df_temp <- sp_df_temp[sp_df_temp[,3] == paste0(pop_type_list[[pop_type]]),]
sp_poptype_genind_temp <- sp_genind_temp[rownames(sp_genind_temp@tab) %in% sp_poptype_df_temp[,1],]
##start genetic analyses
#create genetic summary of the genind file
sp_sum <- summary(sp_poptype_genind_temp)
#create poppr file
sp_poppr <- poppr(sp_poptype_genind_temp)
#save mean for final output table
sp_hexp_mean <- sp_poppr[1:length(levels(sp_poptype_genind_temp@pop)),10]
#allele numbers by pop
sp_nall <- sp_sum$pop.n.all
#individual numbers
sp_ind <- sp_poppr[1:length(levels(sp_poptype_genind_temp@pop)), 2:3]
#save allelic richness for comparison
sp_allrich_list <- allelic.richness(sp_poptype_genind_temp)$Ar
sp_allrich_mean <- colMeans(allelic.richness(sp_poptype_genind_temp)$Ar)
#create data frame
sp_allpop_gendiv_sumstat_df <- signif(cbind(sp_ind, sp_nall, sp_allrich_mean, sp_hexp_mean),3)
#name rows
rownames(sp_allpop_gendiv_sumstat_df) <- unique(sp_df_temp$Pop)
colnames(sp_allpop_gendiv_sumstat_df) <- c("Ind","MLG", "NAll", "All_Rich", "Hexp")
#write out data frame
write.csv(sp_allpop_gendiv_sumstat_df, paste0("../Analyses/Results/Sum_Stats/", pop_type_list[[pop_type]], gsub("\\..*","",sp_genind_list[[sp]]),
"_gendiv_sumstats.csv"))
}
}
sp_df_list
sp_df_temp
sp_df_temp[,1]
sp_df_temp[,2]
head(sp_poptype_df_temp[,1])
rownames(sp_genind_temp@tab)
sp_genind_temp
sp_df_temp[,1]
#organize genind
rownames(sp_genind_temp@tab) <- sp_df_temp[,1]
levels(sp_genind_temp@pop) <- unique(sp_df_temp[,2])
#limit by pop_type
sp_poptype_df_temp <- sp_df_temp[sp_df_temp[,3] == paste0(pop_type_list[[pop_type]]),]
sp_poptype_genind_temp <- sp_genind_temp[rownames(sp_genind_temp@tab) %in% sp_poptype_df_temp[,1],]
##start genetic analyses
#create genetic summary of the genind file
sp_sum <- summary(sp_poptype_genind_temp)
#create poppr file
sp_poppr <- poppr(sp_poptype_genind_temp)
#save mean for final output table
sp_hexp_mean <- sp_poppr[1:length(levels(sp_poptype_genind_temp@pop)),10]
#allele numbers by pop
sp_nall <- sp_sum$pop.n.all
#individual numbers
sp_ind <- sp_poppr[1:length(levels(sp_poptype_genind_temp@pop)), 2:3]
#save allelic richness for comparison
sp_allrich_list <- allelic.richness(sp_poptype_genind_temp)$Ar
sp_allrich_mean <- colMeans(allelic.richness(sp_poptype_genind_temp)$Ar)
#create data frame
sp_allpop_gendiv_sumstat_df <- signif(cbind(sp_ind, sp_nall, sp_allrich_mean, sp_hexp_mean),3)
#name rows
rownames(sp_allpop_gendiv_sumstat_df) <- unique(sp_df_temp$Pop)
#name rows
rownames(sp_allpop_gendiv_sumstat_df) <- unique(sp_poptype_df_temp$Pop)
colnames(sp_allpop_gendiv_sumstat_df) <- c("Ind","MLG", "NAll", "All_Rich", "Hexp")
###loops to generate summary statistics for populations
##outer loop is by species
#inner loop is by wild or botanic garden
for(sp in 1:length(sp_genind_list)){
##write loop to calculate all summary stats
for(pop_type in 1:length(pop_type_list)){
#load genepop files as genind objects
sp_genind_temp <- read.genepop(paste0("Adegenet_Files/",sp_genind_list[[sp]]), ncode = 3)
#load data frames
sp_df_temp <- read.csv(paste0("Data_Frames/", sp_df_list[[sp]]))
#organize genind
rownames(sp_genind_temp@tab) <- sp_df_temp[,1]
levels(sp_genind_temp@pop) <- unique(sp_df_temp[,2])
#limit by pop_type
sp_poptype_df_temp <- sp_df_temp[sp_df_temp[,3] == paste0(pop_type_list[[pop_type]]),]
sp_poptype_genind_temp <- sp_genind_temp[rownames(sp_genind_temp@tab) %in% sp_poptype_df_temp[,1],]
##start genetic analyses
#create genetic summary of the genind file
sp_sum <- summary(sp_poptype_genind_temp)
#create poppr file
sp_poppr <- poppr(sp_poptype_genind_temp)
#save mean for final output table
sp_hexp_mean <- sp_poppr[1:length(levels(sp_poptype_genind_temp@pop)),10]
#allele numbers by pop
sp_nall <- sp_sum$pop.n.all
#individual numbers
sp_ind <- sp_poppr[1:length(levels(sp_poptype_genind_temp@pop)), 2:3]
#save allelic richness for comparison
sp_allrich_list <- allelic.richness(sp_poptype_genind_temp)$Ar
sp_allrich_mean <- colMeans(allelic.richness(sp_poptype_genind_temp)$Ar)
#create data frame
sp_allpop_gendiv_sumstat_df <- signif(cbind(sp_ind, sp_nall, sp_allrich_mean, sp_hexp_mean),3)
#name rows
rownames(sp_allpop_gendiv_sumstat_df) <- unique(sp_poptype_df_temp$Pop)
colnames(sp_allpop_gendiv_sumstat_df) <- c("Ind","MLG", "NAll", "All_Rich", "Hexp")
#write out data frame
write.csv(sp_allpop_gendiv_sumstat_df, paste0("../Analyses/Results/Sum_Stats/", pop_type_list[[pop_type]], gsub("\\..*","",sp_genind_list[[sp]]),
"_gendiv_sumstats.csv"))
}
}
#load in genind
QUAC_wk <- read.genepop("QUAC_allpop_clean.gen", ncode = 3)
#load in genind
QUAC_wk <- read.genepop("Adegenet_Files/QUAC_allpop_clean.gen", ncode = 3)
QUAC_wk_df <- read.csv("Data_Frames/QUAC_allpop_clean_df.csv")
#name rows
rownames(QUAC_wk@tab) <- QUAC_wk_df[,1]
levels(QUAC_wk@pop) <- unique(QUAC_wk_df$Pop)
#limit by pop_type
QUAC_wild_df <- QUAC_wk_df[QUAC_wk_df$Garden_Wild == "Wild",]
QUAC_wild_gen <- QUAC_wk[rownames(QUAC_wk@tab) %in% QUAC_wild_df$Ind,]
QUAC_wild_gen
table(QUAC_wild_gen@pop)
##now run genetic diversity stats
QUAC_wild_poppr <- poppr(QUAC_wild_gen)
QUAC_wild_poppr$Hexp
QUAC_woK_gen <- read.genepop("QUAC_woK_allpop_clean.gen", ncode = 3)
QUAC_woK_gen <- read.genepop("Adegenet_Files/QUAC_woK_allpop_clean.gen", ncode = 3)
QUAC_woK_df <- read.csv("Data_Frames/QUAC_woK_allpop_clean_df.csv")
#limit by pop type
QUAC_wild_woK_df <- QUAC_woK_df[QUAC_woK_df$Garden_Wild == "Wild",]
QUAC_woK_df <- read.csv("Data_Frames/QUAC_woK_allpop_clean_df.csv")
#limit by pop type
QUAC_wild_woK_df <- QUAC_woK_df[QUAC_woK_df$Garden_Wild == "Wild",]
QUAC_wild_poppr_woK <- poppr(QUAC_wild_woK_gen)
#limit by pop type
QUAC_wild_woK_df <- QUAC_woK_df[QUAC_woK_df$Garden_Wild == "Wild",]
QUAC_wild_woK_gen <- QUAC_woK_gen[rownames(QUAC_woK_gen@tab) %in% QUAC_wild_woK_df$Ind,]
QUAC_wild_poppr_woK <- poppr(QUAC_wild_woK_gen)
QUAC_woK_gen <- read.genepop("Adegenet_Files/QUAC_woK_allpop_clean.gen", ncode = 3)
QUAC_woK_df <- read.csv("Data_Frames/QUAC_woK_allpop_clean_df.csv")
#name rows and pops
rownames(QUAC_woK_gen@tab) <- QUAC_woK_df[,1]
levels(QUAC_woK_gen@pop) <- unique(QUAC_woK_df$Pop)
#limit by pop type
QUAC_wild_woK_df <- QUAC_woK_df[QUAC_woK_df$Garden_Wild == "Wild",]
View(QUAC_woK_df)
QUAC_wild_woK_gen <- QUAC_woK_gen[rownames(QUAC_woK_gen@tab) %in% QUAC_wild_woK_df$Ind,]
QUAC_wild_woK_gen
poppr(QUAC_wild_woK_gen)
allelic.richness(QUAC_wild_poppr_woK)
allelic.richness(QUAC_wild_woK_gen)
colMeans(allelic.richness(QUAC_wild_woK_gen)$Ar)
colMeans(allelic.richness(QUAC_wild_gen)$Ar)
###loops to generate summary statistics for populations
##outer loop is by species
#inner loop is by wild or botanic garden
for(sp in 1:length(sp_genind_list)){
##write loop to calculate all summary stats
for(pop_type in 1:length(pop_type_list)){
#load genepop files as genind objects
sp_genind_temp <- read.genepop(paste0("Adegenet_Files/",sp_genind_list[[sp]]), ncode = 3)
#load data frames
sp_df_temp <- read.csv(paste0("Data_Frames/", sp_df_list[[sp]]))
#organize genind
rownames(sp_genind_temp@tab) <- sp_df_temp[,1]
levels(sp_genind_temp@pop) <- unique(sp_df_temp[,2])
#limit by pop_type
sp_poptype_df_temp <- sp_df_temp[sp_df_temp[,3] == paste0(pop_type_list[[pop_type]]),]
sp_poptype_genind_temp <- sp_genind_temp[rownames(sp_genind_temp@tab) %in% sp_poptype_df_temp[,1],]
##start genetic analyses
#create genetic summary of the genind file
sp_sum <- summary(sp_poptype_genind_temp)
#create poppr file
sp_poppr <- poppr(sp_poptype_genind_temp)
#save mean for final output table
sp_hexp_mean <- sp_poppr[1:length(levels(sp_poptype_genind_temp@pop)),10]
#allele numbers by pop
sp_nall <- sp_sum$pop.n.all
#individual numbers
sp_ind <- sp_poppr[1:length(levels(sp_poptype_genind_temp@pop)), 2:3]
#save allelic richness for comparison
sp_allrich_list <- allelic.richness(sp_poptype_genind_temp)$Ar
sp_allrich_mean <- colMeans(allelic.richness(sp_poptype_genind_temp)$Ar)
#create data frame
sp_allpop_gendiv_sumstat_df <- signif(cbind(sp_ind, sp_nall, sp_allrich_mean, sp_hexp_mean),3)
#name rows
rownames(sp_allpop_gendiv_sumstat_df) <- unique(sp_poptype_df_temp$Pop)
colnames(sp_allpop_gendiv_sumstat_df) <- c("Ind","MLG", "NAll", "All_Rich", "Hexp")
#write out data frame
write.csv(sp_allpop_gendiv_sumstat_df, paste0("../Analyses/Results/Sum_Stats/", pop_type_list[[pop_type]], "_", gsub("\\..*","",sp_genind_list[[sp]]),
"_gendiv_sumstats.csv"))
}
}
sp_genind_list
