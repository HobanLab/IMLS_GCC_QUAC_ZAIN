library(adegenet)
library(sjmisc)
###########################
#     Load Data Files     #
###########################
setwd("../../Data_Files")
#first try code on JUST QUAC without Kessler
QUAC_woK_genind <- read.genepop("Adegenet_Files/QUAC_woK_allpop_clean.gen",
ncode = 3)
#load in fa sample functions
source("../Analyses/Functions/Fa_sample_funcs.R")
#allele categories list
all_cat_list <-c("global","glob_v_com","glob_com","glob_lowfr","glob_rare")
#list of duplicate reps
dup_reps <- c(0:9)
#################################################################
#     Calculate Individual Numbers That Contain Each Allele     #
#################################################################
##convert to garden/wild genind object
#create garden genind
num_garden_ind<-sum(table(QUAC_woK_genind@pop)[1:17])
QUAC_garden_genind <- QUAC_woK_genind[1:num_garden_ind,]
#rename pops
levels(QUAC_garden_genind@pop) <- rep("Garden",17)
#create wild genind object
num_wild_ind <- sum(table(QUAC_woK_genind@pop)[18:21])
#create wild genind object
num_wild_ind <- sum(table(QUAC_woK_genind@pop)[18:21])
QUAC_wild_genind <- QUAC_woK_genind[num_garden_ind+1:num_garden_ind+num_wild_ind,]
num_garden_ind+1
num_garden_ind+num_wild_ind
QUAC_wild_genind <- QUAC_woK_genind[(num_garden_ind+1):(num_garden_ind+num_wild_ind),]
#rename pops
levels(QUAC_wild_genind@pop) <- rep("Wild",4)
QUAC_garden_genind
QUAC_wild_genind
#recombine into garden/wild genind object
QUAC_garden_wild_genind <- repool(QUAC_garden_genind, QUAC_wild_genind)
QUAC_garden_wild_genind
table(QUAC_garden_wild_genind@pop)
#calculate how alleles are represented ex situ
QUAC_all_rep <- colSums(seppop(QUAC_garden_wild_genind)[[1]]@tab,na.rm=T)
#convert to the wild genpop object
QUAC_wild_genpop <- genind2genpop(seppop(QUAC_garden_wild_genind)[[2]])
#calculate how alleles are represented ex situ
QUAC_all_rep <- colSums(seppop(QUAC_garden_wild_genind)[[1]]@tab,na.rm=T)
#calculate the allele categories in the wild populations
QUAC_all_cat <- get.allele.cat(QUAC_wild_genpop, 1, 1, n_ind_W, n_drop = 0, glob_only = TRUE)
num_wild_ind
#calculate the allele categories in the wild populations
QUAC_all_cat <- get.allele.cat(QUAC_wild_genpop, 1, 1, num_wild_ind, n_drop = 0, glob_only = TRUE)
#remove regional alleles
QUAC_all_cat <- QUAC_all_cat[1:5]
#create a dataframe of just allele representation counts
QUAC_all_rep_df <- as.data.frame(QUAC_all_rep_df)
length(QUAC_all_cat[[1]])
#calculate how alleles are represented ex situ
QUAC_all_rep <- colSums(seppop(QUAC_garden_wild_genind)[[1]]@tab,na.rm=T)
#calculate the allele categories in the wild populations
QUAC_all_cat <- get.allele.cat(QUAC_wild_genpop, 1, 1, num_wild_ind, n_drop = 0, glob_only = TRUE)
#remove regional alleles
QUAC_all_cat <- QUAC_all_cat[1:5]
num_alleles_in_cat<-length(QUAC_all_cat[[1]])
number_ho<-vector(length=num_alleles_in_cat)
number_he<-vector(length=num_alleles_in_cat)
for (a in 1:num_alleles_in_cat){
number_ho[a]<-sum(QUAC_garden_genind@tab[,QUAC_all_cat[[1]]][,a]==2,na.rm=T)
number_he[a]<-sum(QUAC_garden_genind@tab[,QUAC_all_cat[[1]]][,a]==1,na.rm=T)
}
number_ho
sum(num_ind_w_allele>0)/num_alleles_in_cat
num_ind_w_allele<-number_ho+number_he
sum(num_ind_w_allele>0)/num_alleles_in_cat
sum(num_ind_w_allele>1)/num_alleles_in_cat
sum(num_ind_w_allele>2)/num_alleles_in_cat
sum(num_ind_w_allele>4)/num_alleles_in_cat
sum(num_ind_w_allele>9)/num_alleles_in_cat
sum(num_ind_w_allele>0)/num_alleles_in_cat
sum(num_ind_w_allele>5)/num_alleles_in_cat
sum(num_ind_w_allele>=5)/num_alleles_in_cat
sum(num_ind_w_allele>=0)/num_alleles_in_cat
sum(num_ind_w_allele>0)/num_alleles_in_cat
sum(num_ind_w_allele>=5)/num_alleles_in_cat
sum(num_ind_w_allele>4)/num_alleles_in_cat
sum(num_ind_w_allele>9)/num_alleles_in_cat
sum(num_ind_w_allele>9)/num_alleles_in_cat
##list
all_rep_list <- list()
for(dup in dup_reps){
all_rep_list[[dup+1]] <- sum(num_ind_w_allele>dup)/num_alleles_in_cat
}
all_rep_list
QUAC_garden_genind
num_rep_list <- c(list(), list(), list(), list(), list())
QUAC_all_cat[[1]]
for(cat in 1:length(QUAC_all_cat)){
num_alleles_in_cat <- length(QUAC_all_cat[[cat]])
for (a in 1:num_alleles_in_cat){
num_rep_list[[cat]][a] <- sum(QUAC_garden_genind@tab[,QUAC_all_cat[[cat]]][,a] > 0, na.rm=T)
}
}
num_rep_list <- list(list(), list(), list(), list(), list())
for(cat in 1:length(QUAC_all_cat)){
num_alleles_in_cat <- length(QUAC_all_cat[[cat]])
for (a in 1:num_alleles_in_cat){
num_rep_list[[cat]][a] <- sum(QUAC_garden_genind@tab[,QUAC_all_cat[[cat]]][,a] > 0, na.rm=T)
}
}
num_rep_list[[1]]
sum(num_rep_list[[1]])
sum(as.numeric(num_rep_list[[1]]))
as.numeric(num_rep_list[[1]])
length(as.numeric(num_rep_list[[1]]))
#create data frame to save results
QUAC_rep_df <- matrix(nrow = length(dup_reps),
ncol = length(QUAC_all_cat))
for(dup in dup_reps){
for(cat in 1:length(QUAC_all_cat)){
QUAC_rep_df[dup+1,cat] <- sum(num_rep_list[[cat]]>dup)/length(QUAC_all_cat[[cat]])
}
}
QUAC_rep_df
QUAC_rep_fin_df <- matrix(nrow = length(dup_reps),
ncol = length(QUAC_all_cat))
signif(QUAC_rep_df*100,3)
sum(num_rep_list[[1]]>0)
QUAC_all_cat[[1]]
length(QUAC_all_cat[[1]])
num_rep_list
num_rep_list[[1]]
sum(num_rep_list[[1]])
sum(as.numeric(num_rep_list[[1]]))
mean(as.numeric(num_rep_list[[1]]))
as.numeric(num_rep_list[[1]])
for(dup in dup_reps){
for(cat in 1:length(QUAC_all_cat)){
#create data frame to store results
QUAC_rep_df[dup+1,cat] <- sum(num_rep_list[[cat]]>dup)/length(QUAC_all_cat[[cat]])
}
}
QUAC_rep_df <- signif(QUAC_rep_df*100,3)
rownames(QUAC_rep_df)
rownames(QUAC_rep_df) <- paste0(c(1:10), "or more copies")
View(QUAC_rep_df)
QUAC_rep_df <- signif(QUAC_rep_df*100,3)
#create data frame to save results
QUAC_rep_df <- matrix(nrow = length(dup_reps),
ncol = length(QUAC_all_cat))
for(dup in dup_reps){
for(cat in 1:length(QUAC_all_cat)){
#create data frame to store results
QUAC_rep_df[dup+1,cat] <- sum(num_rep_list[[cat]]>dup)/length(QUAC_all_cat[[cat]])
}
}
QUAC_rep_df <- signif(QUAC_rep_df*100,3)
colnames(QUAC_rep_df) <- all_cat_list
rownames(QUAC_rep_df) <- paste0(c(1:10), " or more copies")
QUAC_rep_df
write.csv(QUAC_rep_df, "../Analyses/Results/Garden_Wild_Comparison/QUAC_rep_df.csv")
####ZAIN
#load in ZAIN data file
ZAIN_genind <- read.genepop("Adegenet_Files/ZAIN_rebinned_allpop.gen",
ncode = 3)
#create garden genind
num_garden_ind <- sum(table(ZAIN_genind@pop)[1:10])
#create garden genind
ZAIN_garden_ind <- sum(table(ZAIN_genind@pop)[1:10])
ZAIN_garden_genind <- ZAIN_genind[1:ZAIN_garden_ind,]
###################################
#     Trying with Sean's Code     #
###################################
#create garden genind
num_garden_ind<-sum(table(QUAC_woK_genind@pop)[1:17])
QUAC_garden_genind <- QUAC_woK_genind[1:num_garden_ind,]
#rename pops
levels(QUAC_garden_genind@pop) <- rep("Garden",17)
#create wild genind object
num_wild_ind <- sum(table(QUAC_woK_genind@pop)[18:21])
QUAC_wild_genind <- QUAC_woK_genind[(num_garden_ind+1):(num_garden_ind+num_wild_ind),]
#rename pops
levels(QUAC_wild_genind@pop) <- rep("Wild",4)
#convert to the wild genpop object
QUAC_wild_genpop <- genind2genpop(seppop(QUAC_wild_genind)[[2]])
#calculate how alleles are represented ex situ
QUAC_all_rep <- colSums(QUAC_garden_genind@tab,na.rm=T)
#calculate the allele categories in the wild populations
QUAC_all_cat <- get.allele.cat(QUAC_wild_genpop, 1, 1, num_wild_ind, n_drop = 0, glob_only = TRUE)
#remove regional alleles
QUAC_all_cat <- QUAC_all_cat[1:5]
num_ind_w_allele<-number_ho+number_he
##list
all_rep_list <- list()
for(dup in dup_reps){
all_rep_list[[dup+1]] <- sum(num_ind_w_allele>dup)/num_alleles_in_cat
}
num_rep_list <- list(list(), list(), list(), list(), list())
for(cat in 1:length(QUAC_all_cat)){
num_alleles_in_cat <- length(QUAC_all_cat[[cat]])
for (a in 1:num_alleles_in_cat){
num_rep_list[[cat]][a] <- sum(QUAC_garden_genind@tab[,QUAC_all_cat[[cat]]][,a] > 0, na.rm=T)
}
}
#create data frame to save results
QUAC_rep_df <- matrix(nrow = length(dup_reps),
ncol = length(QUAC_all_cat))
for(dup in dup_reps){
for(cat in 1:length(QUAC_all_cat)){
#create data frame to store results
QUAC_rep_df[dup+1,cat] <- sum(num_rep_list[[cat]]>dup)/length(QUAC_all_cat[[cat]])
}
}
QUAC_rep_df
#
#create wild genind object
ZAIN_wild_ind <- sum(table(ZAIN_garden_ind@pop)[11:35])
#
#create wild genind object
ZAIN_wild_ind <- sum(table(ZAIN_genind@pop)[11:35])
ZAIN_wild_genind <- ZAIN_genind[(ZAIN_garden_ind+1):(ZAIN_garden_ind+ZAIN_wild_ind),]
ZAIN_garden_genind
ZAIN_wild_genind
ZAIN_genind
#convert to the wild genpop object
ZAIN_wild_genpop <- genind2genpop(seppop(ZAIN_wild_genind))
ZAIN_wild_genind <- ZAIN_genind[(ZAIN_garden_ind+1):(ZAIN_garden_ind+ZAIN_wild_ind),]
#convert to the wild genpop object
ZAIN_wild_genpop <- genind2genpop(seppop(ZAIN_wild_genind))
#convert to the wild genpop object
ZAIN_wild_genpop <- genind2genpop(ZAIN_wild_genind)
#calculate how alleles are represented ex situ
ZAIN_all_rep <- colSums(ZAIN_garden_genind@tab,na.rm=T)
#calculate the allele categories in the wild populations
ZAIN_all_cat <- get.allele.cat(ZAIN_wild_genpop, 1, 1, ZAIN_wild_ind, n_drop = 0, glob_only = TRUE)
#remove regional alleles
ZAIN_all_cat <- ZAIN_all_cat[1:5]
##create a list to store the individual numbers
#list
ZAIN_num_rep_list <- list(list(), list(), list(), list(), list())
##create a list to store the individual numbers
#list
ZAIN_num_rep_list <- list(list(), list(), list(), list(), list())
for(cat in 1:length(ZAIN_all_cat)){
ZAIN_num_alleles_in_cat <- length(ZAIN_all_cat[[cat]])
for (a in 1:ZAIN_num_alleles_in_cat){
ZAIN_num_rep_list[[cat]][a] <- sum(ZAIN_garden_genind@tab[,ZAIN_all_cat[[cat]]][,a] > 0, na.rm=T)
}
}
#create data frame to save results
ZAIN_rep_df <- matrix(nrow = length(dup_reps),
ncol = length(ZAIN_all_cat))
#create data frame to save results
ZAIN_rep_df <- matrix(nrow = length(dup_reps),
ncol = length(ZAIN_all_cat))
for(dup in dup_reps){
for(cat in 1:length(ZAIN_all_cat)){
#create data frame to store results
ZAIN_rep_df[dup+1,cat] <- sum(ZAIN_num_rep_list[[cat]]>dup)/length(ZAIN_all_cat[[cat]])
}
}
ZAIN_rep_df
colnames(ZAIN_rep_df) <- all_cat_list
rownames(ZAIN_rep_df) <- paste0(c(1:10),"or more copies")
ZAIN_rep_df <- signif(ZAIN_rep_df*100,3)
ZAIN_rep_df
####ZAIN
#load in ZAIN data file
ZAIN_genind <- read.genepop("Adegenet_Files/ZAIN_rebinned_allpop_clean.gen",
ncode = 3)
table(ZAIN_genind@pop)
####ZAIN
#load in ZAIN data file
ZAIN_genind <- read.genepop("Adegenet_Files/ZAIN_rebinned_allpop_clean.gen",
ncode = 3)
#create garden genind
ZAIN_garden_ind <- sum(table(ZAIN_genind@pop)[1:10])
ZAIN_garden_genind <- ZAIN_genind[1:ZAIN_garden_ind,]
#create wild genind object
ZAIN_wild_ind <- sum(table(ZAIN_genind@pop)[c(11:19, 23:26, 28:32, 34:35)])
ZAIN_wild_genind <- ZAIN_genind[(ZAIN_garden_ind+1):(ZAIN_garden_ind+ZAIN_wild_ind),]
#convert to the wild genpop object
ZAIN_wild_genpop <- genind2genpop(ZAIN_wild_genind)
#calculate how alleles are represented ex situ
ZAIN_all_rep <- colSums(ZAIN_garden_genind@tab,na.rm=T)
#calculate the allele categories in the wild populations
ZAIN_all_cat <- get.allele.cat(ZAIN_wild_genpop, 1, 1, ZAIN_wild_ind, n_drop = 0, glob_only = TRUE)
#remove regional alleles
ZAIN_all_cat <- ZAIN_all_cat[1:5]
##create a list to store the individual numbers
#list
ZAIN_num_rep_list <- list(list(), list(), list(), list(), list())
for(cat in 1:length(ZAIN_all_cat)){
ZAIN_num_alleles_in_cat <- length(ZAIN_all_cat[[cat]])
for (a in 1:ZAIN_num_alleles_in_cat){
ZAIN_num_rep_list[[cat]][a] <- sum(ZAIN_garden_genind@tab[,ZAIN_all_cat[[cat]]][,a] > 0, na.rm=T)
}
}
#create data frame to save results
ZAIN_rep_df <- matrix(nrow = length(dup_reps),
ncol = length(ZAIN_all_cat))
for(dup in dup_reps){
for(cat in 1:length(ZAIN_all_cat)){
#create data frame to store results
ZAIN_rep_df[dup+1,cat] <- sum(ZAIN_num_rep_list[[cat]]>dup)/length(ZAIN_all_cat[[cat]])
}
}
colnames(ZAIN_rep_df) <- all_cat_list
rownames(ZAIN_rep_df) <- paste0(c(1:10),"or more copies")
ZAIN_rep_df <- signif(ZAIN_rep_df*100,3)
ZAIN_rep_df
#create data frame to save results
ZAIN_rep_df <- matrix(nrow = length(dup_reps),
ncol = length(ZAIN_all_cat))
for(dup in dup_reps){
for(cat in 1:length(ZAIN_all_cat)){
#create data frame to store results
ZAIN_rep_df[dup+1,cat] <- sum(ZAIN_num_rep_list[[cat]]>dup)/length(ZAIN_all_cat[[cat]])
}
}
colnames(ZAIN_rep_df) <- all_cat_list
rownames(ZAIN_rep_df) <- paste0(c(1:10)," or more copies")
ZAIN_rep_df <- signif(ZAIN_rep_df*100,3)
ZAIN_rep_df
write.csv(ZAIN_rep_df, "../Analyses/Results/Garden_Wild_Comparison/ZAIN_rep_df.csv")
length(QUAC_all_cat)
length(QUAC_all_cat[[1]])
sum(num_rep_list[[1]] > 0)
